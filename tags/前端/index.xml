<rss xmlns:atom="http://www.w3.org/2005/Atom" version="2.0">
    <channel>
        <title>前端 - 标签 - Doごみ箱🪄</title>
        <link>http://dodolalorc.cn/tags/%E5%89%8D%E7%AB%AF/</link>
        <description>前端 - 标签 - Doごみ箱🪄</description>
        <generator>Hugo -- gohugo.io</generator><language>zh-CN</language><managingEditor>flora_chen2021@163.com (DODOLA)</managingEditor>
            <webMaster>flora_chen2021@163.com (DODOLA)</webMaster><copyright>dodola</copyright><lastBuildDate>Fri, 12 Jul 2024 02:04:49 &#43;0800</lastBuildDate><atom:link href="http://dodolalorc.cn/tags/%E5%89%8D%E7%AB%AF/" rel="self" type="application/rss+xml" /><item>
    <title>【划水】Canacitor构建基于Vue/React的移动端应用</title>
    <link>http://dodolalorc.cn/posts/canacitor_init/</link>
    <pubDate>Fri, 12 Jul 2024 02:04:49 &#43;0800</pubDate><author>
        <name>DODOLA</name>
    </author><guid>http://dodolalorc.cn/posts/canacitor_init/</guid>
    <description><![CDATA[<p>最近工作需要开发一个移动端应用，考虑到我们团队前端已经有Vue/React的开发经验，所以决定使用<a href="https://capacitorjs.com/" target="_blank" rel="noopener noreferrer">Canacitor</a>来构建。</p>]]></description>
</item><item>
    <title>购物车页面制作教程（包含分页设计）</title>
    <link>http://dodolalorc.cn/posts/cartpage/</link>
    <pubDate>Sat, 06 Jul 2024 19:16:27 &#43;0800</pubDate><author>
        <name>DODOLA</name>
    </author><guid>http://dodolalorc.cn/posts/cartpage/</guid>
    <description><![CDATA[<div class="details admonition abstract open">
        <div class="details-summary admonition-title">
            <i class="icon fas fa-list-ul fa-fw"></i>前言<i class="details-icon fas fa-angle-right fa-fw"></i>
        </div>
        <div class="details-content">
            <div class="admonition-content">这篇文章用于2024年蓝旭暑期项目前的培训作业教学，目的是从零开始构建一个购物车页面，以此来熟悉原生前端三件套。o((&gt;ω&lt; ))o</div>
        </div>
    </div>
<h1 id="需求分析" class="headerLink">
    <a href="#%e9%9c%80%e6%b1%82%e5%88%86%e6%9e%90" class="header-mark"></a>需求分析</h1><p><strong>功能要求</strong>：</p>
<ul>
<li>
<p>全选、单选联动逻辑（包括依次选中所有物品时自动勾选全选按钮、勾选全选时勾选所
有单选、取消全选后取消所有选中等）、结算小项总价以及整体总价。</p>]]></description>
</item><item>
    <title>MutationObserver学习&#43;实践</title>
    <link>http://dodolalorc.cn/posts/mutationobserver/</link>
    <pubDate>Thu, 04 Jul 2024 16:31:24 &#43;0800</pubDate><author>
        <name>DODOLA</name>
    </author><guid>http://dodolalorc.cn/posts/mutationobserver/</guid>
    <description><![CDATA[<blockquote>
<p>一篇学习 MutationObserver 的文章</p>
</blockquote>
<h2 id="背景" class="headerLink">
    <a href="#%e8%83%8c%e6%99%af" class="header-mark"></a>背景</h2><p>今天调整新主题的时候，在重新设计友链样式的时候想保留原本的随机背景颜色，之前数量少的时候似乎不太明显，现在本地测试发觉加载太慢了。于是上网寻找解决思路，找到了 MutationObserver 这个 API，于是就学习了一下//此处记录一下学习过程。</p>
<h2 id="需求分析" class="headerLink">
    <a href="#%e9%9c%80%e6%b1%82%e5%88%86%e6%9e%90" class="header-mark"></a>需求分析</h2><p>我有不知数量的div元素，每个div元素都有一个class名为<code>friend-link-div</code>，我需要在每个单个的div元素被加载完成的同时，对它设置一个随机的背景颜色。而不是等待整个页面或窗口加载完毕</p>
<h2 id="想法分析" class="headerLink">
    <a href="#%e6%83%b3%e6%b3%95%e5%88%86%e6%9e%90" class="header-mark"></a>想法分析</h2><h3 id="windowonload和domcontentloaded的问题" class="headerLink">
    <a href="#windowonload%e5%92%8cdomcontentloaded%e7%9a%84%e9%97%ae%e9%a2%98" class="header-mark"></a><code>window.onload</code>和<code>'DOMContentLoaded'</code>的问题</h3><p>原本的实现代码：</p>
<div class="highlight"><div class="chroma">
<table class="lntable"><tr><td class="lntd">
<pre tabindex="0" class="chroma"><code><span class="lnt">1
</span><span class="lnt">2
</span><span class="lnt">3
</span><span class="lnt">4
</span><span class="lnt">5
</span><span class="lnt">6
</span><span class="lnt">7
</span></code></pre></td>
<td class="lntd">
<pre tabindex="0" class="chroma"><code class="language-js" data-lang="js"><span class="line"><span class="cl">  <span class="nb">window</span><span class="p">.</span><span class="nx">onload</span><span class="o">=</span><span class="kd">function</span> <span class="p">()</span> <span class="p">{</span>
</span></span><span class="line"><span class="cl">    <span class="kr">const</span> <span class="nx">randomHex</span> <span class="o">=</span> <span class="p">()</span> <span class="p">=&gt;</span> <span class="sb">`rgba(</span><span class="si">${</span><span class="nb">Math</span><span class="p">.</span><span class="nx">round</span><span class="p">(</span><span class="nb">Math</span><span class="p">.</span><span class="nx">random</span><span class="p">()</span><span class="o">*</span><span class="mi">255</span><span class="p">)</span><span class="si">}</span><span class="sb">, </span><span class="si">${</span><span class="nb">Math</span><span class="p">.</span><span class="nx">round</span><span class="p">(</span><span class="nb">Math</span><span class="p">.</span><span class="nx">random</span><span class="p">()</span><span class="o">*</span><span class="mi">255</span><span class="p">)</span><span class="si">}</span><span class="sb">, </span><span class="si">${</span><span class="nb">Math</span><span class="p">.</span><span class="nx">round</span><span class="p">(</span><span class="nb">Math</span><span class="p">.</span><span class="nx">random</span><span class="p">()</span><span class="o">*</span><span class="mi">255</span><span class="p">)</span><span class="si">}</span><span class="sb">, 0.5)`</span><span class="p">;</span>
</span></span><span class="line"><span class="cl">    <span class="kd">var</span> <span class="nx">friendArr</span><span class="o">=</span><span class="nb">document</span><span class="p">.</span><span class="nx">getElementsByClassName</span><span class="p">(</span><span class="s2">&#34;friend-div&#34;</span><span class="p">),</span><span class="nx">temp</span><span class="o">=</span><span class="p">[];</span>
</span></span><span class="line"><span class="cl">    <span class="k">for</span><span class="p">(</span><span class="kd">var</span> <span class="nx">i</span><span class="o">=</span><span class="mi">0</span><span class="p">;</span><span class="nx">i</span><span class="o">&lt;</span><span class="nx">friendArr</span><span class="p">.</span><span class="nx">length</span><span class="p">;</span><span class="nx">i</span><span class="o">++</span><span class="p">){</span>
</span></span><span class="line"><span class="cl">        <span class="nx">friendArr</span><span class="p">[</span><span class="nx">i</span><span class="p">].</span><span class="nx">style</span><span class="p">.</span><span class="nx">background</span><span class="o">=</span><span class="nx">randomHex</span><span class="p">();</span>
</span></span><span class="line"><span class="cl">    <span class="p">}</span>
</span></span><span class="line"><span class="cl">  <span class="p">}</span>
</span></span></code></pre></td></tr></table>
</div>
</div><p>原本的思路就是简单的在页面加载完成后，获取所有的友链元素，然后给每个元素设置一个随机的背景颜色。但是这样的实现方式有一个问题，就是当友链数量较多的时候，会导致页面加载变慢，因为每次都要重新计算随机颜色，并且在等待本页面加载的时候，友链的背景颜色是白色的，这样会导致页面的视觉体验不好。</p>]]></description>
</item><item>
    <title>Vue3封装一个SVG组件</title>
    <link>http://dodolalorc.cn/posts/vue_svgicon/</link>
    <pubDate>Sat, 23 Mar 2024 15:24:28 &#43;0800</pubDate><author>
        <name>DODOLA</name>
    </author><guid>http://dodolalorc.cn/posts/vue_svgicon/</guid>
    <description><![CDATA[<h1 id="vue3vitesvg" class="headerLink">
    <a href="#vue3vitesvg" class="header-mark"></a><code>Vue3+Vite+Svg</code></h1><p>以前使用<code>Svg</code>的时候会图简单直接将内容巨长的<code>Svg</code>代码粘贴在项目中，结果导致需要用<code>Svg</code>图标的部分代码巨长，今天写项目又需要使用<code>Svg</code>了，于是想着对其进行封装。</p>
<h2 id="插件安装" class="headerLink">
    <a href="#%e6%8f%92%e4%bb%b6%e5%ae%89%e8%a3%85" class="header-mark"></a>插件安装</h2><p>使用<code>vite-plugin-svg-icons</code>插件。</p>
<p>安装：</p>
<div class="highlight"><div class="chroma">
<table class="lntable"><tr><td class="lntd">
<pre tabindex="0" class="chroma"><code><span class="lnt">1
</span></code></pre></td>
<td class="lntd">
<pre tabindex="0" class="chroma"><code class="language-bash" data-lang="bash"><span class="line"><span class="cl">npm i vite-plugin-svg-icons -D
</span></span></code></pre></td></tr></table>
</div>
</div><p>在<code>src/assets/</code>下新建<code>icon</code>文件夹，这个文件夹下存放我们以后要用的<code>.svg</code>文件。</p>
<h3 id="配置viteconfigts" class="headerLink">
    <a href="#%e9%85%8d%e7%bd%aeviteconfigts" class="header-mark"></a>配置<code>vite.config.ts</code></h3><div class="highlight"><div class="chroma">
<table class="lntable"><tr><td class="lntd">
<pre tabindex="0" class="chroma"><code><span class="lnt"> 1
</span><span class="lnt"> 2
</span><span class="lnt"> 3
</span><span class="lnt"> 4
</span><span class="lnt"> 5
</span><span class="lnt"> 6
</span><span class="lnt"> 7
</span><span class="lnt"> 8
</span><span class="lnt"> 9
</span><span class="lnt">10
</span><span class="lnt">11
</span><span class="lnt">12
</span><span class="lnt">13
</span><span class="lnt">14
</span><span class="lnt">15
</span></code></pre></td>
<td class="lntd">
<pre tabindex="0" class="chroma"><code class="language-ts" data-lang="ts"><span class="line"><span class="cl"><span class="kr">import</span> <span class="p">{</span><span class="nx">createSvgIconsPlugin</span><span class="p">}</span> <span class="kr">from</span> <span class="s1">&#39;vite-plugin-svg-icons&#39;</span><span class="p">;</span>
</span></span><span class="line"><span class="cl">
</span></span><span class="line"><span class="cl"><span class="kr">export</span> <span class="k">default</span> <span class="nx">defineConfig</span><span class="p">({</span>
</span></span><span class="line"><span class="cl">    <span class="c1">//...
</span></span></span><span class="line"><span class="cl"><span class="c1"></span>    <span class="nx">plugins</span><span class="o">:</span><span class="p">[</span>
</span></span><span class="line"><span class="cl">        <span class="c1">//...
</span></span></span><span class="line"><span class="cl"><span class="c1"></span>        <span class="nx">createSvgIconsPlugin</span><span class="p">({</span>
</span></span><span class="line"><span class="cl">            <span class="nx">iconDirs</span><span class="o">:</span><span class="p">[</span>
</span></span><span class="line"><span class="cl">                  <span class="c1">// 自己的svg存放目录
</span></span></span><span class="line"><span class="cl"><span class="c1"></span>                <span class="nx">path</span><span class="p">.</span><span class="nx">resolve</span><span class="p">(</span><span class="nx">process</span><span class="p">.</span><span class="nx">cwd</span><span class="p">(),</span><span class="s1">&#39;src/assets/icon&#39;</span><span class="p">),</span>
</span></span><span class="line"><span class="cl">            <span class="p">],</span>
</span></span><span class="line"><span class="cl">            <span class="nx">symbolId</span><span class="o">:</span><span class="s1">&#39;icon-[name]&#39;</span><span class="p">,</span>  <span class="c1">// 设置symbol的id
</span></span></span><span class="line"><span class="cl"><span class="c1"></span>        <span class="p">})</span>
</span></span><span class="line"><span class="cl">    <span class="p">]</span>
</span></span><span class="line"><span class="cl"><span class="p">})</span>
</span></span></code></pre></td></tr></table>
</div>
</div><h3 id="在maints中加入" class="headerLink">
    <a href="#%e5%9c%a8maints%e4%b8%ad%e5%8a%a0%e5%85%a5" class="header-mark"></a>在<code>main.ts</code>中加入：</h3><div class="highlight"><div class="chroma">
<table class="lntable"><tr><td class="lntd">
<pre tabindex="0" class="chroma"><code><span class="lnt">1
</span></code></pre></td>
<td class="lntd">
<pre tabindex="0" class="chroma"><code class="language-bash" data-lang="bash"><span class="line"><span class="cl">import <span class="s1">&#39;virtual:svg-icons-register&#39;</span><span class="p">;</span>
</span></span></code></pre></td></tr></table>
</div>
</div><h3 id="封装svgicon组件" class="headerLink">
    <a href="#%e5%b0%81%e8%a3%85svgicon%e7%bb%84%e4%bb%b6" class="header-mark"></a>封装<code>SvgIcon</code>组件</h3><p>在<code>src/components/</code>新建<code>SvgIcon</code>文件夹，在其中新建<code>index.vue</code>，内容：</p>]]></description>
</item><item>
    <title>一个Vue项目的基础模板||PC端&#43;移动端适配</title>
    <link>http://dodolalorc.cn/posts/vuemod/</link>
    <pubDate>Sun, 10 Mar 2024 17:14:08 &#43;0800</pubDate><author>
        <name>DODOLA</name>
    </author><guid>http://dodolalorc.cn/posts/vuemod/</guid>
    <description><![CDATA[<h2 id="创建项目" class="headerLink">
    <a href="#%e5%88%9b%e5%bb%ba%e9%a1%b9%e7%9b%ae" class="header-mark"></a>创建项目</h2><div class="highlight"><div class="chroma">
<table class="lntable"><tr><td class="lntd">
<pre tabindex="0" class="chroma"><code><span class="lnt">1
</span><span class="lnt">2
</span><span class="lnt">3
</span><span class="lnt">4
</span></code></pre></td>
<td class="lntd">
<pre tabindex="0" class="chroma"><code class="language-bash" data-lang="bash"><span class="line"><span class="cl">npm create vite@latest dodola -- --template vue-ts
</span></span><span class="line"><span class="cl"><span class="nb">cd</span> dodola
</span></span><span class="line"><span class="cl">npm install
</span></span><span class="line"><span class="cl">npm run dev
</span></span></code></pre></td></tr></table>
</div>
</div><p>转到根目录下后</p>
<h3 id="规范目录" class="headerLink">
    <a href="#%e8%a7%84%e8%8c%83%e7%9b%ae%e5%bd%95" class="header-mark"></a>规范目录</h3><div class="highlight"><div class="chroma">
<table class="lntable"><tr><td class="lntd">
<pre tabindex="0" class="chroma"><code><span class="lnt"> 1
</span><span class="lnt"> 2
</span><span class="lnt"> 3
</span><span class="lnt"> 4
</span><span class="lnt"> 5
</span><span class="lnt"> 6
</span><span class="lnt"> 7
</span><span class="lnt"> 8
</span><span class="lnt"> 9
</span><span class="lnt">10
</span><span class="lnt">11
</span><span class="lnt">12
</span><span class="lnt">13
</span><span class="lnt">14
</span><span class="lnt">15
</span><span class="lnt">16
</span><span class="lnt">17
</span><span class="lnt">18
</span><span class="lnt">19
</span><span class="lnt">20
</span><span class="lnt">21
</span><span class="lnt">22
</span></code></pre></td>
<td class="lntd">
<pre tabindex="0" class="chroma"><code class="language-bash" data-lang="bash"><span class="line"><span class="cl">├── dist/
</span></span><span class="line"><span class="cl">└── src/
</span></span><span class="line"><span class="cl">    ├── api
</span></span><span class="line"><span class="cl">    │   └── ... // 抽取出API请求
</span></span><span class="line"><span class="cl">    ├── assets/                    // 静态资源目录
</span></span><span class="line"><span class="cl">    ├── common/                    // 通用类库目录
</span></span><span class="line"><span class="cl">    ├── components/                // 公共组件目录
</span></span><span class="line"><span class="cl">    ├── routers/                   // 路由配置目录
</span></span><span class="line"><span class="cl">    ├── store/                     // pinia 状态管理目录
</span></span><span class="line"><span class="cl">        ├── index.ts               // 导出 store 的地方
</span></span><span class="line"><span class="cl">        ├── home.ts                // 模块
</span></span><span class="line"><span class="cl">        └── user.ts                // 模块
</span></span><span class="line"><span class="cl">    ├── style/                     // 通用 CSS 目录
</span></span><span class="line"><span class="cl">    ├── utils/                     // 工具函数目录
</span></span><span class="line"><span class="cl">    ├── views/                     // 页面组件目录
</span></span><span class="line"><span class="cl">    ├── App.vue
</span></span><span class="line"><span class="cl">    ├── main.ts
</span></span><span class="line"><span class="cl">    ├── vite-env.d.ts
</span></span><span class="line"><span class="cl">├── index.html
</span></span><span class="line"><span class="cl">├── tsconfig.json                  // TypeScript 配置文件
</span></span><span class="line"><span class="cl">├── vite.config.ts                 // Vite 配置文件
</span></span><span class="line"><span class="cl">└── package.json
</span></span></code></pre></td></tr></table>
</div>
</div><h2 id="path模板代理" class="headerLink">
    <a href="#path%e6%a8%a1%e6%9d%bf%e4%bb%a3%e7%90%86" class="header-mark"></a>path模板+代理</h2><p>在<code>vite.config.ts</code>中，设置<code>@</code>指向<code>src</code>、服务器启动端口、打包路径、代理等等设置</p>]]></description>
</item><item>
    <title>哆哆啦のjQuery学习笔记（超细）（23.07.28）</title>
    <link>http://dodolalorc.cn/posts/jquery_notes/</link>
    <pubDate>Fri, 01 Dec 2023 13:10:27 &#43;0800</pubDate><author>
        <name>DODOLA</name>
    </author><guid>http://dodolalorc.cn/posts/jquery_notes/</guid>
    <description><![CDATA[<h2 id="1-jquery对象" class="headerLink">
    <a href="#1-jquery%e5%af%b9%e8%b1%a1" class="header-mark"></a>1. jQuery对象</h2><h3 id="jquery使用" class="headerLink">
    <a href="#jquery%e4%bd%bf%e7%94%a8" class="header-mark"></a>jQuery使用</h3><h3 id="dom对象和jquery包装集对象" class="headerLink">
    <a href="#dom%e5%af%b9%e8%b1%a1%e5%92%8cjquery%e5%8c%85%e8%a3%85%e9%9b%86%e5%af%b9%e8%b1%a1" class="header-mark"></a>Dom对象和jQuery包装集对象</h3><p>学习代码：</p>
<div class="highlight"><div class="chroma">
<table class="lntable"><tr><td class="lntd">
<pre tabindex="0" class="chroma"><code><span class="lnt"> 1
</span><span class="lnt"> 2
</span><span class="lnt"> 3
</span><span class="lnt"> 4
</span><span class="lnt"> 5
</span><span class="lnt"> 6
</span><span class="lnt"> 7
</span><span class="lnt"> 8
</span><span class="lnt"> 9
</span><span class="lnt">10
</span><span class="lnt">11
</span><span class="lnt">12
</span><span class="lnt">13
</span><span class="lnt">14
</span><span class="lnt">15
</span><span class="lnt">16
</span><span class="lnt">17
</span><span class="lnt">18
</span><span class="lnt">19
</span><span class="lnt">20
</span><span class="lnt">21
</span><span class="lnt">22
</span><span class="lnt">23
</span><span class="lnt">24
</span><span class="lnt">25
</span><span class="lnt">26
</span><span class="lnt">27
</span><span class="lnt">28
</span><span class="lnt">29
</span><span class="lnt">30
</span><span class="lnt">31
</span><span class="lnt">32
</span><span class="lnt">33
</span><span class="lnt">34
</span><span class="lnt">35
</span><span class="lnt">36
</span><span class="lnt">37
</span><span class="lnt">38
</span><span class="lnt">39
</span><span class="lnt">40
</span><span class="lnt">41
</span><span class="lnt">42
</span><span class="lnt">43
</span><span class="lnt">44
</span><span class="lnt">45
</span><span class="lnt">46
</span><span class="lnt">47
</span><span class="lnt">48
</span><span class="lnt">49
</span><span class="lnt">50
</span><span class="lnt">51
</span><span class="lnt">52
</span><span class="lnt">53
</span><span class="lnt">54
</span><span class="lnt">55
</span><span class="lnt">56
</span><span class="lnt">57
</span><span class="lnt">58
</span><span class="lnt">59
</span><span class="lnt">60
</span><span class="lnt">61
</span><span class="lnt">62
</span><span class="lnt">63
</span><span class="lnt">64
</span><span class="lnt">65
</span><span class="lnt">66
</span><span class="lnt">67
</span><span class="lnt">68
</span></code></pre></td>
<td class="lntd">
<pre tabindex="0" class="chroma"><code class="language-html" data-lang="html"><span class="line"><span class="cl"><span class="cp">&lt;!DOCTYPE html&gt;</span>
</span></span><span class="line"><span class="cl"><span class="p">&lt;</span><span class="nt">html</span> <span class="na">lang</span><span class="o">=</span><span class="s">&#34;en&#34;</span><span class="p">&gt;</span>
</span></span><span class="line"><span class="cl"><span class="p">&lt;</span><span class="nt">head</span><span class="p">&gt;</span>
</span></span><span class="line"><span class="cl">    <span class="p">&lt;</span><span class="nt">meta</span> <span class="na">charset</span><span class="o">=</span><span class="s">&#34;UTF-8&#34;</span><span class="p">&gt;</span>
</span></span><span class="line"><span class="cl">    <span class="p">&lt;</span><span class="nt">meta</span> <span class="na">name</span><span class="o">=</span><span class="s">&#34;viewport&#34;</span> <span class="na">content</span><span class="o">=</span><span class="s">&#34;width=device-width, initial-scale=1.0&#34;</span><span class="p">&gt;</span>
</span></span><span class="line"><span class="cl">    <span class="c">&lt;!-- JQuery引入 --&gt;</span>
</span></span><span class="line"><span class="cl">    <span class="p">&lt;</span><span class="nt">script</span> <span class="na">src</span><span class="o">=</span><span class="s">&#34;src/assets/js/code.jquery.com_jquery-3.7.0.js&#34;</span><span class="p">&gt;&lt;/</span><span class="nt">script</span><span class="p">&gt;</span>
</span></span><span class="line"><span class="cl">    <span class="p">&lt;</span><span class="nt">title</span><span class="p">&gt;</span>哆哆啦のJQuery学习笔记页面<span class="p">&lt;/</span><span class="nt">title</span><span class="p">&gt;</span>
</span></span><span class="line"><span class="cl"><span class="p">&lt;/</span><span class="nt">head</span><span class="p">&gt;</span>
</span></span><span class="line"><span class="cl"><span class="p">&lt;</span><span class="nt">body</span><span class="p">&gt;</span>
</span></span><span class="line"><span class="cl">    <span class="c">&lt;!-- 内容框架 --&gt;</span>
</span></span><span class="line"><span class="cl">    <span class="p">&lt;</span><span class="nt">div</span> <span class="na">id</span><span class="o">=</span><span class="s">&#34;mydiv&#34;</span><span class="p">&gt;</span>文本<span class="p">&lt;/</span><span class="nt">div</span><span class="p">&gt;</span>
</span></span><span class="line"><span class="cl"><span class="p">&lt;/</span><span class="nt">body</span><span class="p">&gt;</span>
</span></span><span class="line"><span class="cl">    <span class="c">&lt;!-- 
</span></span></span><span class="line"><span class="cl"><span class="c">        Dom对象
</span></span></span><span class="line"><span class="cl"><span class="c">            通过js方式获取的元素对象（document）
</span></span></span><span class="line"><span class="cl"><span class="c">        JQuery对象
</span></span></span><span class="line"><span class="cl"><span class="c">            通过jQuery方法获取的元素对象，返回的是jQuery包装集
</span></span></span><span class="line"><span class="cl"><span class="c">    --&gt;</span>
</span></span><span class="line"><span class="cl">    <span class="p">&lt;</span><span class="nt">script</span> <span class="na">type</span><span class="o">=</span><span class="s">&#34;text/javascript&#34;</span><span class="p">&gt;</span>
</span></span><span class="line"><span class="cl">        <span class="c1">// Dom对象
</span></span></span><span class="line"><span class="cl"><span class="c1"></span>            <span class="c1">// 单个的Dom对象
</span></span></span><span class="line"><span class="cl"><span class="c1"></span>        <span class="kd">var</span> <span class="nx">divDom</span> <span class="o">=</span> <span class="nb">document</span><span class="p">.</span><span class="nx">getElementById</span><span class="p">(</span><span class="s2">&#34;mydiv&#34;</span><span class="p">);</span>
</span></span><span class="line"><span class="cl">        <span class="nx">console</span><span class="p">.</span><span class="nx">log</span><span class="p">(</span><span class="nx">divDom</span><span class="p">);</span>
</span></span><span class="line"><span class="cl">            <span class="c1">// Dom对象数组
</span></span></span><span class="line"><span class="cl"><span class="c1"></span>        <span class="kd">var</span> <span class="nx">divsDom</span> <span class="o">=</span> <span class="nb">document</span><span class="p">.</span><span class="nx">getElementsByTagName</span><span class="p">(</span><span class="s2">&#34;div&#34;</span><span class="p">)</span>
</span></span><span class="line"><span class="cl">        <span class="nx">console</span><span class="p">.</span><span class="nx">log</span><span class="p">(</span><span class="nx">divsDom</span><span class="p">)</span>
</span></span><span class="line"><span class="cl">                <span class="c1">// 会返回[]数组
</span></span></span><span class="line"><span class="cl"><span class="c1"></span>            <span class="c1">// js获取不存在的元素时：
</span></span></span><span class="line"><span class="cl"><span class="c1"></span>        <span class="kd">var</span> <span class="nx">spanDom</span> <span class="o">=</span> <span class="nb">document</span><span class="p">.</span><span class="nx">getElementsByTagName</span><span class="p">(</span><span class="s2">&#34;span&#34;</span><span class="p">)</span>
</span></span><span class="line"><span class="cl">        <span class="nx">console</span><span class="p">.</span><span class="nx">log</span><span class="p">(</span><span class="nx">spanDom</span><span class="p">)</span>
</span></span><span class="line"><span class="cl">                <span class="c1">// 会返回空数组
</span></span></span><span class="line"><span class="cl"><span class="c1"></span>        <span class="kd">var</span> <span class="nx">spanDom2</span> <span class="o">=</span> <span class="nb">document</span><span class="p">.</span><span class="nx">getElementById</span><span class="p">(</span><span class="s2">&#34;myspan&#34;</span><span class="p">)</span>
</span></span><span class="line"><span class="cl">        <span class="nx">console</span><span class="p">.</span><span class="nx">log</span><span class="p">(</span><span class="nx">spanDom2</span><span class="p">)</span>
</span></span><span class="line"><span class="cl">
</span></span><span class="line"><span class="cl">        <span class="nx">console</span><span class="p">.</span><span class="nx">log</span><span class="p">(</span><span class="s2">&#34;============分割线============&#34;</span><span class="p">)</span>
</span></span><span class="line"><span class="cl">
</span></span><span class="line"><span class="cl">        <span class="c1">// jQuery对象
</span></span></span><span class="line"><span class="cl"><span class="c1"></span>        <span class="c1">// 通过id选择获取元素对象   $(&#34;#id属性值&#34;)
</span></span></span><span class="line"><span class="cl"><span class="c1"></span>        <span class="kd">var</span> <span class="nx">divJquery</span> <span class="o">=</span> <span class="nx">$</span><span class="p">(</span><span class="s2">&#34;#mydiv&#34;</span><span class="p">);</span>
</span></span><span class="line"><span class="cl">        <span class="nx">console</span><span class="p">.</span><span class="nx">log</span><span class="p">(</span><span class="nx">divJquery</span><span class="p">)</span>
</span></span><span class="line"><span class="cl">            <span class="c1">// jQuery获取不存在的元素时：
</span></span></span><span class="line"><span class="cl"><span class="c1"></span>        <span class="kd">var</span> <span class="nx">spanJquery</span> <span class="o">=</span> <span class="nx">$</span><span class="p">(</span><span class="s2">&#34;#myspan&#34;</span><span class="p">)</span>
</span></span><span class="line"><span class="cl">        <span class="nx">console</span><span class="p">.</span><span class="nx">log</span><span class="p">(</span><span class="nx">spanJquery</span><span class="p">)</span>
</span></span><span class="line"><span class="cl">                <span class="c1">// 会返回空集合{}
</span></span></span><span class="line"><span class="cl"><span class="c1"></span>
</span></span><span class="line"><span class="cl">        <span class="c1">// Dom对象转为jQuery对象
</span></span></span><span class="line"><span class="cl"><span class="c1"></span>            <span class="c1">// 利用$()方法进行包装即可
</span></span></span><span class="line"><span class="cl"><span class="c1"></span>        <span class="kd">var</span> <span class="nx">divDomToJquery</span> <span class="o">=</span> <span class="nx">$</span><span class="p">(</span><span class="nx">divDom</span><span class="p">)</span>
</span></span><span class="line"><span class="cl">        <span class="nx">console</span><span class="p">.</span><span class="nx">log</span><span class="p">(</span><span class="nx">divDomToJquery</span><span class="p">)</span>
</span></span><span class="line"><span class="cl">
</span></span><span class="line"><span class="cl">        <span class="c1">// jQuery转Dom对象
</span></span></span><span class="line"><span class="cl"><span class="c1"></span>            <span class="c1">// 因为jQuery对象是个对象的包装集，所以欲将jQuery对象转换为Dom对象，可以通过：
</span></span></span><span class="line"><span class="cl"><span class="c1"></span>            <span class="c1">// 1.获取包装集对象中指定下标的元素；
</span></span></span><span class="line"><span class="cl"><span class="c1"></span>            <span class="kd">var</span> <span class="nx">divJqueryToDom</span> <span class="o">=</span> <span class="nx">divJquery</span><span class="p">[</span><span class="mi">0</span><span class="p">]</span>
</span></span><span class="line"><span class="cl">            <span class="nx">console</span><span class="p">.</span><span class="nx">log</span><span class="p">(</span><span class="nx">divJqueryToDom</span><span class="p">)</span>
</span></span><span class="line"><span class="cl">            <span class="c1">// 2.通过遍历
</span></span></span><span class="line"><span class="cl"><span class="c1"></span>            <span class="nx">$</span><span class="p">(</span><span class="s1">&#39;#mydiv&#39;</span><span class="p">).</span><span class="nx">each</span><span class="p">(</span><span class="kd">function</span><span class="p">(){</span>
</span></span><span class="line"><span class="cl">                <span class="kd">var</span> <span class="nx">divJqueryToDom1</span> <span class="o">=</span> <span class="k">this</span>
</span></span><span class="line"><span class="cl">                <span class="nx">console</span><span class="p">.</span><span class="nx">log</span><span class="p">(</span><span class="nx">divJqueryToDom1</span><span class="p">)</span>
</span></span><span class="line"><span class="cl">
</span></span><span class="line"><span class="cl">                <span class="kd">var</span> <span class="nx">divJqueryToDom2</span> <span class="o">=</span> <span class="nx">$</span><span class="p">(</span><span class="k">this</span><span class="p">)</span>
</span></span><span class="line"><span class="cl">                <span class="nx">console</span><span class="p">.</span><span class="nx">log</span><span class="p">(</span><span class="nx">divJqueryToDom2</span><span class="p">)</span>
</span></span><span class="line"><span class="cl">                <span class="c1">// 通过遍历jQuery对象数组得到的对象是Dom对象，可以通过$()转为jQuery对象
</span></span></span><span class="line"><span class="cl"><span class="c1"></span>                <span class="c1">// 这里的this是Dom对象(divJqueryToDom1)，我们用$()方法将它转回jQuery对象(divJqueryToDom2)了
</span></span></span><span class="line"><span class="cl"><span class="c1"></span>            <span class="p">})</span>
</span></span><span class="line"><span class="cl">    <span class="p">&lt;/</span><span class="nt">script</span><span class="p">&gt;</span>
</span></span><span class="line"><span class="cl"><span class="p">&lt;/</span><span class="nt">html</span><span class="p">&gt;</span>
</span></span></code></pre></td></tr></table>
</div>
</div><h2 id="2-jquery选择器" class="headerLink">
    <a href="#2-jquery%e9%80%89%e6%8b%a9%e5%99%a8" class="header-mark"></a>2. jQuery选择器</h2><h3 id="21-基础选择器" class="headerLink">
    <a href="#21-%e5%9f%ba%e7%a1%80%e9%80%89%e6%8b%a9%e5%99%a8" class="header-mark"></a>2.1 基础选择器</h3><p>学习代码：</p>]]></description>
</item></channel>
</rss>
