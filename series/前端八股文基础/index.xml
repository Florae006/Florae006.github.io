<rss xmlns:atom="http://www.w3.org/2005/Atom" version="2.0"><channel><title>前端八股文基础 - 系列 - Doごみ箱🪄</title><link>http://dodolalorc.cn/series/%E5%89%8D%E7%AB%AF%E5%85%AB%E8%82%A1%E6%96%87%E5%9F%BA%E7%A1%80/</link><description>前端八股文基础 - 系列 - Doごみ箱🪄</description><generator>Hugo -- gohugo.io</generator><language>zh-CN</language><managingEditor>chenflora124@gmail.com (DODOLA)</managingEditor><webMaster>chenflora124@gmail.com (DODOLA)</webMaster><copyright>dodola</copyright><lastBuildDate>Mon, 17 Mar 2025 13:17:45 +0800</lastBuildDate><atom:link href="http://dodolalorc.cn/series/%E5%89%8D%E7%AB%AF%E5%85%AB%E8%82%A1%E6%96%87%E5%9F%BA%E7%A1%80/" rel="self" type="application/rss+xml"/><item><title>大文件上传和下载问题</title><link>http://dodolalorc.cn/posts/large_file_upload/</link><pubDate>Mon, 17 Mar 2025 13:17:45 +0800</pubDate><author><name>DODOLA</name></author><guid>http://dodolalorc.cn/posts/large_file_upload/</guid><description><![CDATA[<div class="featured-image">
                <img src="https://img.dodolalorc.cn/i/2025/03/03/67c558f57d10e.png" referrerpolicy="no-referrer">
            </div><div class="details admonition abstract open">
        <div class="details-summary admonition-title">
            <i class="icon fas fa-list-ul fa-fw"></i>问题预设<i class="details-icon fas fa-angle-right fa-fw"></i>
        </div>
        <div class="details-content">
            <div class="admonition-content"><p>网络断开之后，之前上传的部分没了？</p>
<p>传着传着，网络波动了，结果没有了。</p>
<p>关机后可不可以接着传，怎么做到？</p>
</div>
        </div>
    </div>
<h3 id="术语" class="headerLink">
    <a href="#%e6%9c%af%e8%af%ad" class="header-mark"></a>术语</h3><ul>
<li>断点续传</li>
<li>断开重连重传</li>
<li><strong>切片上传</strong></li>
</ul>
<h2 id="切片上传" class="headerLink">
    <a href="#%e5%88%87%e7%89%87%e4%b8%8a%e4%bc%a0" class="header-mark"></a>切片上传</h2><p><strong>步骤</strong></p>
<ol>
<li>前端切片 chunk 5MB</li>
<li>将切片传递给后端，切片要去名：hash、index</li>
<li>后端组合切片</li>
</ol>
<h3 id="代码示例" class="headerLink">
    <a href="#%e4%bb%a3%e7%a0%81%e7%a4%ba%e4%be%8b" class="header-mark"></a>代码示例</h3><div class="highlight"><div class="chroma">
<table class="lntable"><tr><td class="lntd">
<pre tabindex="0" class="chroma"><code><span class="lnt"> 1
</span><span class="lnt"> 2
</span><span class="lnt"> 3
</span><span class="lnt"> 4
</span><span class="lnt"> 5
</span><span class="lnt"> 6
</span><span class="lnt"> 7
</span><span class="lnt"> 8
</span><span class="lnt"> 9
</span><span class="lnt">10
</span><span class="lnt">11
</span><span class="lnt">12
</span><span class="lnt">13
</span><span class="lnt">14
</span><span class="lnt">15
</span><span class="lnt">16
</span><span class="lnt">17
</span><span class="lnt">18
</span><span class="lnt">19
</span><span class="lnt">20
</span><span class="lnt">21
</span><span class="lnt">22
</span><span class="lnt">23
</span><span class="lnt">24
</span><span class="lnt">25
</span><span class="lnt">26
</span><span class="lnt">27
</span><span class="lnt">28
</span><span class="lnt">29
</span><span class="lnt">30
</span><span class="lnt">31
</span><span class="lnt">32
</span><span class="lnt">33
</span><span class="lnt">34
</span><span class="lnt">35
</span><span class="lnt">36
</span><span class="lnt">37
</span><span class="lnt">38
</span><span class="lnt">39
</span><span class="lnt">40
</span><span class="lnt">41
</span><span class="lnt">42
</span><span class="lnt">43
</span><span class="lnt">44
</span><span class="lnt">45
</span><span class="lnt">46
</span><span class="lnt">47
</span><span class="lnt">48
</span><span class="lnt">49
</span><span class="lnt">50
</span><span class="lnt">51
</span><span class="lnt">52
</span><span class="lnt">53
</span><span class="lnt">54
</span><span class="lnt">55
</span><span class="lnt">56
</span><span class="lnt">57
</span><span class="lnt">58
</span><span class="lnt">59
</span><span class="lnt">60
</span><span class="lnt">61
</span><span class="lnt">62
</span><span class="lnt">63
</span><span class="lnt">64
</span><span class="lnt">65
</span><span class="lnt">66
</span><span class="lnt">67
</span><span class="lnt">68
</span><span class="lnt">69
</span><span class="lnt">70
</span><span class="lnt">71
</span><span class="lnt">72
</span><span class="lnt">73
</span></code></pre></td>
<td class="lntd">
<pre tabindex="0" class="chroma"><code class="language-html" data-lang="html"><span class="line"><span class="cl"><span class="cp">&lt;!DOCTYPE html&gt;</span>
</span></span><span class="line"><span class="cl"><span class="p">&lt;</span><span class="nt">html</span> <span class="na">lang</span><span class="o">=</span><span class="s">&#34;en&#34;</span><span class="p">&gt;</span>
</span></span><span class="line"><span class="cl">
</span></span><span class="line"><span class="cl"><span class="p">&lt;</span><span class="nt">head</span><span class="p">&gt;</span>
</span></span><span class="line"><span class="cl">  <span class="p">&lt;</span><span class="nt">meta</span> <span class="na">charset</span><span class="o">=</span><span class="s">&#34;UTF-8&#34;</span><span class="p">&gt;</span>
</span></span><span class="line"><span class="cl">  <span class="p">&lt;</span><span class="nt">meta</span> <span class="na">name</span><span class="o">=</span><span class="s">&#34;viewport&#34;</span> <span class="na">content</span><span class="o">=</span><span class="s">&#34;width=device-width, initial-scale=1.0&#34;</span><span class="p">&gt;</span>
</span></span><span class="line"><span class="cl">  <span class="p">&lt;</span><span class="nt">title</span><span class="p">&gt;</span>大文件上传<span class="p">&lt;/</span><span class="nt">title</span><span class="p">&gt;</span>
</span></span><span class="line"><span class="cl"><span class="p">&lt;/</span><span class="nt">head</span><span class="p">&gt;</span>
</span></span><span class="line"><span class="cl">
</span></span><span class="line"><span class="cl"><span class="p">&lt;</span><span class="nt">body</span><span class="p">&gt;</span>
</span></span><span class="line"><span class="cl">  <span class="p">&lt;</span><span class="nt">input</span> <span class="na">type</span><span class="o">=</span><span class="s">&#34;file&#34;</span> <span class="na">id</span><span class="o">=</span><span class="s">&#34;file&#34;</span> <span class="na">multiple</span><span class="p">&gt;</span>
</span></span><span class="line"><span class="cl">  <span class="p">&lt;</span><span class="nt">button</span> <span class="na">id</span><span class="o">=</span><span class="s">&#34;upload&#34;</span><span class="p">&gt;</span>上传<span class="p">&lt;/</span><span class="nt">button</span><span class="p">&gt;</span>
</span></span><span class="line"><span class="cl"><span class="p">&lt;/</span><span class="nt">body</span><span class="p">&gt;</span>
</span></span><span class="line"><span class="cl">
</span></span><span class="line"><span class="cl"><span class="p">&lt;</span><span class="nt">script</span><span class="p">&gt;</span>
</span></span><span class="line"><span class="cl">
</span></span><span class="line"><span class="cl">  <span class="kr">const</span> <span class="nx">CHUNK_SIZE</span> <span class="o">=</span> <span class="mi">5</span> <span class="o">*</span> <span class="mi">1024</span> <span class="o">*</span> <span class="mi">1024</span><span class="p">;</span> <span class="c1">// 5MB
</span></span></span><span class="line"><span class="cl"><span class="c1"></span>
</span></span><span class="line"><span class="cl">
</span></span><span class="line"><span class="cl">  <span class="kd">function</span> <span class="nx">uploadFile</span><span class="p">()</span> <span class="p">{</span>
</span></span><span class="line"><span class="cl">    <span class="kr">const</span> <span class="nx">file</span> <span class="o">=</span> <span class="nb">document</span><span class="p">.</span><span class="nx">getElementById</span><span class="p">(</span><span class="s1">&#39;file&#39;</span><span class="p">).</span><span class="nx">files</span><span class="p">[</span><span class="mi">0</span><span class="p">];</span>
</span></span><span class="line"><span class="cl">    <span class="nx">console</span><span class="p">.</span><span class="nx">log</span><span class="p">(</span><span class="s1">&#39;上传文件&#39;</span><span class="p">,</span> <span class="nx">file</span><span class="p">.</span><span class="nx">name</span><span class="p">)</span>
</span></span><span class="line"><span class="cl">    <span class="k">if</span> <span class="p">(</span><span class="o">!</span><span class="nx">file</span><span class="p">)</span> <span class="p">{</span>
</span></span><span class="line"><span class="cl">      <span class="k">return</span>
</span></span><span class="line"><span class="cl">    <span class="p">}</span>
</span></span><span class="line"><span class="cl">
</span></span><span class="line"><span class="cl">    <span class="kr">const</span> <span class="nx">totalSize</span> <span class="o">=</span> <span class="nx">file</span><span class="p">.</span><span class="nx">size</span>
</span></span><span class="line"><span class="cl">    <span class="kr">const</span> <span class="nx">totalChunks</span> <span class="o">=</span> <span class="nb">Math</span><span class="p">.</span><span class="nx">ceil</span><span class="p">(</span><span class="nx">totalSize</span> <span class="o">/</span> <span class="nx">CHUNK_SIZE</span><span class="p">)</span>
</span></span><span class="line"><span class="cl">    <span class="kd">let</span> <span class="nx">currentChunk</span> <span class="o">=</span> <span class="mi">0</span>
</span></span><span class="line"><span class="cl">    <span class="kr">const</span> <span class="nx">chunks</span> <span class="o">=</span> <span class="p">[]</span>
</span></span><span class="line"><span class="cl">
</span></span><span class="line"><span class="cl">    <span class="kd">function</span> <span class="nx">uploadChunk</span><span class="p">()</span> <span class="p">{</span>
</span></span><span class="line"><span class="cl">      <span class="nx">console</span><span class="p">.</span><span class="nx">log</span><span class="p">(</span><span class="s1">&#39;上传第&#39;</span><span class="p">,</span> <span class="nx">currentChunk</span><span class="p">,</span> <span class="s1">&#39;块&#39;</span><span class="p">)</span>
</span></span><span class="line"><span class="cl">      <span class="k">if</span> <span class="p">(</span><span class="nx">currentChunk</span> <span class="o">&gt;=</span> <span class="nx">totalChunks</span><span class="p">)</span> <span class="p">{</span>
</span></span><span class="line"><span class="cl">        <span class="nx">console</span><span class="p">.</span><span class="nx">log</span><span class="p">(</span><span class="s1">&#39;上传完成&#39;</span><span class="p">)</span>
</span></span><span class="line"><span class="cl">        <span class="k">return</span>
</span></span><span class="line"><span class="cl">      <span class="p">}</span>
</span></span><span class="line"><span class="cl">      <span class="kr">const</span> <span class="nx">start</span> <span class="o">=</span> <span class="nx">currentChunk</span> <span class="o">*</span> <span class="nx">CHUNK_SIZE</span>
</span></span><span class="line"><span class="cl">      <span class="kr">const</span> <span class="nx">end</span> <span class="o">=</span> <span class="nb">Math</span><span class="p">.</span><span class="nx">min</span><span class="p">(</span><span class="nx">totalSize</span><span class="p">,</span> <span class="nx">start</span> <span class="o">+</span> <span class="nx">CHUNK_SIZE</span><span class="p">)</span>
</span></span><span class="line"><span class="cl">      <span class="kr">const</span> <span class="nx">chunk</span> <span class="o">=</span> <span class="nx">file</span><span class="p">.</span><span class="nx">slice</span><span class="p">(</span><span class="nx">start</span><span class="p">,</span> <span class="nx">end</span><span class="p">)</span>
</span></span><span class="line"><span class="cl">
</span></span><span class="line"><span class="cl">      <span class="kr">const</span> <span class="nx">formData</span> <span class="o">=</span> <span class="k">new</span> <span class="nx">FormData</span><span class="p">()</span>
</span></span><span class="line"><span class="cl">      <span class="nx">formData</span><span class="p">.</span><span class="nx">append</span><span class="p">(</span><span class="s1">&#39;file&#39;</span><span class="p">,</span> <span class="nx">chunk</span><span class="p">)</span>
</span></span><span class="line"><span class="cl">      <span class="nx">formData</span><span class="p">.</span><span class="nx">append</span><span class="p">(</span><span class="s1">&#39;index&#39;</span><span class="p">,</span> <span class="nx">currentChunk</span><span class="p">)</span>
</span></span><span class="line"><span class="cl">      <span class="nx">formData</span><span class="p">.</span><span class="nx">append</span><span class="p">(</span><span class="s1">&#39;totalChunks&#39;</span><span class="p">,</span> <span class="nx">totalChunks</span><span class="p">)</span>
</span></span><span class="line"><span class="cl">      <span class="nx">formData</span><span class="p">.</span><span class="nx">append</span><span class="p">(</span><span class="s1">&#39;filename&#39;</span><span class="p">,</span> <span class="nx">file</span><span class="p">.</span><span class="nx">name</span><span class="p">)</span>
</span></span><span class="line"><span class="cl">
</span></span><span class="line"><span class="cl">      <span class="c1">// fetch(&#39;/api/upload&#39;, {
</span></span></span><span class="line"><span class="cl"><span class="c1"></span>      <span class="c1">//   method: &#39;POST&#39;,
</span></span></span><span class="line"><span class="cl"><span class="c1"></span>      <span class="c1">//   body: formData
</span></span></span><span class="line"><span class="cl"><span class="c1"></span>      <span class="c1">// }).then(res =&gt; {
</span></span></span><span class="line"><span class="cl"><span class="c1"></span>      <span class="c1">//   if (res.ok) {
</span></span></span><span class="line"><span class="cl"><span class="c1"></span>      <span class="c1">//     currentChunk++;
</span></span></span><span class="line"><span class="cl"><span class="c1"></span>      <span class="c1">//     uploadChunk() // 递归上传下一块
</span></span></span><span class="line"><span class="cl"><span class="c1"></span>      <span class="c1">//   } else {
</span></span></span><span class="line"><span class="cl"><span class="c1"></span>      <span class="c1">//     throw new Error(&#39;上传失败&#39;)
</span></span></span><span class="line"><span class="cl"><span class="c1"></span>      <span class="c1">//   }
</span></span></span><span class="line"><span class="cl"><span class="c1"></span>      <span class="c1">// }).catch(err =&gt; {
</span></span></span><span class="line"><span class="cl"><span class="c1"></span>      <span class="c1">//   console.error(err)
</span></span></span><span class="line"><span class="cl"><span class="c1"></span>      <span class="c1">// });
</span></span></span><span class="line"><span class="cl"><span class="c1"></span>
</span></span><span class="line"><span class="cl">      <span class="nx">currentChunk</span><span class="o">++</span><span class="p">;</span>
</span></span><span class="line"><span class="cl">      <span class="nx">uploadChunk</span><span class="p">()</span> <span class="c1">// 递归上传下一块
</span></span></span><span class="line"><span class="cl"><span class="c1"></span>    <span class="p">};</span>
</span></span><span class="line"><span class="cl">
</span></span><span class="line"><span class="cl">    <span class="c1">// 开始上传
</span></span></span><span class="line"><span class="cl"><span class="c1"></span>    <span class="nx">uploadChunk</span><span class="p">();</span>
</span></span><span class="line"><span class="cl">  <span class="p">};</span>
</span></span><span class="line"><span class="cl">
</span></span><span class="line"><span class="cl">  <span class="nb">document</span><span class="p">.</span><span class="nx">getElementById</span><span class="p">(</span><span class="s1">&#39;upload&#39;</span><span class="p">).</span><span class="nx">addEventListener</span><span class="p">(</span><span class="s1">&#39;click&#39;</span><span class="p">,</span> <span class="nx">uploadFile</span><span class="p">);</span>
</span></span><span class="line"><span class="cl"><span class="p">&lt;/</span><span class="nt">script</span><span class="p">&gt;</span>
</span></span><span class="line"><span class="cl">
</span></span><span class="line"><span class="cl"><span class="p">&lt;/</span><span class="nt">html</span><span class="p">&gt;</span>
</span></span></code></pre></td></tr></table>
</div>
</div><h3 id="优化" class="headerLink">
    <a href="#%e4%bc%98%e5%8c%96" class="header-mark"></a>优化</h3><h4 id="压缩文件" class="headerLink">
    <a href="#%e5%8e%8b%e7%bc%a9%e6%96%87%e4%bb%b6" class="header-mark"></a>压缩文件</h4><p>上传前对文件进行压缩，减少传输的数据量。</p>]]></description></item><item><title>前端流量控制常用手段</title><link>http://dodolalorc.cn/posts/flow_control/</link><pubDate>Mon, 17 Mar 2025 11:40:19 +0800</pubDate><author><name>DODOLA</name></author><guid>http://dodolalorc.cn/posts/flow_control/</guid><description><![CDATA[<div class="featured-image">
                <img src="https://img.dodolalorc.cn/i/2025/03/03/67c5599367fe0.jpg" referrerpolicy="no-referrer">
            </div><div class="details admonition abstract open">
        <div class="details-summary admonition-title">
            <i class="icon fas fa-list-ul fa-fw"></i>问题预设<i class="details-icon fas fa-angle-right fa-fw"></i>
        </div>
        <div class="details-content">
            <div class="admonition-content">如何解决页面请求接口的大规模并发问题？</div>
        </div>
    </div>
<p>在需要处理大规模请求的情境中，做好流量控制可以提升系统稳定性和性能。</p>
<h2 id="防抖节流" class="headerLink">
    <a href="#%e9%98%b2%e6%8a%96%e8%8a%82%e6%b5%81" class="header-mark"></a>防抖/节流</h2><h3 id="防抖debounce" class="headerLink">
    <a href="#%e9%98%b2%e6%8a%96debounce" class="header-mark"></a>防抖（Debounce）</h3><p>在事件触发后，延迟执行函数，若在延迟期间再次出发，则重新计时，如在搜索框输入、调整窗口大小时。</p>
<h4 id="实现" class="headerLink">
    <a href="#%e5%ae%9e%e7%8e%b0" class="header-mark"></a>实现</h4><div class="highlight"><div class="chroma">
<table class="lntable"><tr><td class="lntd">
<pre tabindex="0" class="chroma"><code><span class="lnt"> 1
</span><span class="lnt"> 2
</span><span class="lnt"> 3
</span><span class="lnt"> 4
</span><span class="lnt"> 5
</span><span class="lnt"> 6
</span><span class="lnt"> 7
</span><span class="lnt"> 8
</span><span class="lnt"> 9
</span><span class="lnt">10
</span><span class="lnt">11
</span><span class="lnt">12
</span><span class="lnt">13
</span><span class="lnt">14
</span><span class="lnt">15
</span><span class="lnt">16
</span><span class="lnt">17
</span></code></pre></td>
<td class="lntd">
<pre tabindex="0" class="chroma"><code class="language-js" data-lang="js"><span class="line"><span class="cl"><span class="kd">function</span> <span class="nx">debounce</span><span class="p">(</span><span class="nx">fn</span><span class="p">,</span> <span class="nx">wait</span><span class="p">)</span> <span class="p">{</span>
</span></span><span class="line"><span class="cl">    <span class="kd">let</span> <span class="nx">timeout</span><span class="p">;</span>
</span></span><span class="line"><span class="cl">    <span class="k">return</span> <span class="kd">function</span> <span class="p">()</span> <span class="p">{</span>
</span></span><span class="line"><span class="cl">        <span class="kd">let</span> <span class="nx">context</span> <span class="o">=</span> <span class="k">this</span><span class="p">;</span>
</span></span><span class="line"><span class="cl">        <span class="kd">let</span> <span class="nx">args</span> <span class="o">=</span> <span class="nx">arguments</span><span class="p">;</span>
</span></span><span class="line"><span class="cl">        <span class="nx">clearTimeout</span><span class="p">(</span><span class="nx">timeout</span><span class="p">);</span>
</span></span><span class="line"><span class="cl">        <span class="nx">timeout</span> <span class="o">=</span> <span class="nx">setTimeout</span><span class="p">(</span><span class="kd">function</span> <span class="p">()</span> <span class="p">{</span>
</span></span><span class="line"><span class="cl">            <span class="nx">fn</span><span class="p">.</span><span class="nx">apply</span><span class="p">(</span><span class="nx">context</span><span class="p">,</span> <span class="nx">args</span><span class="p">);</span>
</span></span><span class="line"><span class="cl">        <span class="p">},</span> <span class="nx">wait</span><span class="p">);</span>
</span></span><span class="line"><span class="cl">    <span class="p">}</span>
</span></span><span class="line"><span class="cl"><span class="p">}</span>
</span></span><span class="line"><span class="cl">
</span></span><span class="line"><span class="cl"><span class="kr">const</span> <span class="nx">sample</span> <span class="o">=</span> <span class="kd">function</span> <span class="p">()</span> <span class="p">{</span>
</span></span><span class="line"><span class="cl">    <span class="nx">console</span><span class="p">.</span><span class="nx">log</span><span class="p">(</span><span class="s2">&#34;xxx&#34;</span><span class="p">);</span>
</span></span><span class="line"><span class="cl"><span class="p">}</span>
</span></span><span class="line"><span class="cl">
</span></span><span class="line"><span class="cl"><span class="nb">window</span><span class="p">.</span><span class="nx">addEventListener</span><span class="p">(</span><span class="s1">&#39;resize&#39;</span><span class="p">,</span> <span class="nx">debounce</span><span class="p">(</span><span class="nx">sample</span><span class="p">,</span> <span class="mi">300</span><span class="p">));</span>
</span></span></code></pre></td></tr></table>
</div>
</div><h4 id="为什么在-debounce-函数中使用-let" class="headerLink">
    <a href="#%e4%b8%ba%e4%bb%80%e4%b9%88%e5%9c%a8-debounce-%e5%87%bd%e6%95%b0%e4%b8%ad%e4%bd%bf%e7%94%a8-let" class="header-mark"></a>为什么在  <code>debounce</code>  函数中使用  <code>let</code>？</h4><p>在  <code>debounce</code>  函数中，<code>timeout</code>  变量需要满足以下条件：</p>]]></description></item><item><title>JavaScript 链式调用 | 设计模式 笔记</title><link>http://dodolalorc.cn/posts/method_chaining/</link><pubDate>Mon, 17 Mar 2025 09:26:02 +0800</pubDate><author><name>DODOLA</name></author><guid>http://dodolalorc.cn/posts/method_chaining/</guid><description><![CDATA[<div class="featured-image">
                <img src="https://img.dodolalorc.cn/i/2025/03/03/67c55994138f8.jpg" referrerpolicy="no-referrer">
            </div><h2 id="vue-从-createapp-开始的链式调用" class="headerLink">
    <a href="#vue-%e4%bb%8e-createapp-%e5%bc%80%e5%a7%8b%e7%9a%84%e9%93%be%e5%bc%8f%e8%b0%83%e7%94%a8" class="header-mark"></a>Vue :从 createApp 开始的链式调用</h2><h3 id="代码示例" class="headerLink">
    <a href="#%e4%bb%a3%e7%a0%81%e7%a4%ba%e4%be%8b" class="header-mark"></a>代码示例</h3><div class="highlight"><div class="chroma">
<table class="lntable"><tr><td class="lntd">
<pre tabindex="0" class="chroma"><code><span class="lnt"> 1
</span><span class="lnt"> 2
</span><span class="lnt"> 3
</span><span class="lnt"> 4
</span><span class="lnt"> 5
</span><span class="lnt"> 6
</span><span class="lnt"> 7
</span><span class="lnt"> 8
</span><span class="lnt"> 9
</span><span class="lnt">10
</span><span class="lnt">11
</span><span class="lnt">12
</span><span class="lnt">13
</span><span class="lnt">14
</span><span class="lnt">15
</span><span class="lnt">16
</span><span class="lnt">17
</span><span class="lnt">18
</span><span class="lnt">19
</span><span class="lnt">20
</span><span class="lnt">21
</span><span class="lnt">22
</span><span class="lnt">23
</span><span class="lnt">24
</span><span class="lnt">25
</span><span class="lnt">26
</span><span class="lnt">27
</span><span class="lnt">28
</span><span class="lnt">29
</span><span class="lnt">30
</span><span class="lnt">31
</span><span class="lnt">32
</span><span class="lnt">33
</span><span class="lnt">34
</span><span class="lnt">35
</span><span class="lnt">36
</span><span class="lnt">37
</span></code></pre></td>
<td class="lntd">
<pre tabindex="0" class="chroma"><code class="language-ts" data-lang="ts"><span class="line"><span class="cl"><span class="kr">import</span> <span class="p">{</span> <span class="nx">createApp</span> <span class="p">}</span> <span class="kr">from</span> <span class="s1">&#39;vue&#39;</span><span class="p">;</span>
</span></span><span class="line"><span class="cl">
</span></span><span class="line"><span class="cl"><span class="c1">// 创建一个 Vue 应用实例
</span></span></span><span class="line"><span class="cl"><span class="c1"></span><span class="kr">const</span> <span class="nx">app</span> <span class="o">=</span> <span class="nx">createApp</span><span class="p">({</span>
</span></span><span class="line"><span class="cl">  <span class="nx">data() {</span>
</span></span><span class="line"><span class="cl">    <span class="k">return</span> <span class="p">{</span>
</span></span><span class="line"><span class="cl">      <span class="nx">message</span><span class="o">:</span> <span class="s1">&#39;Hello, Vue!&#39;</span>
</span></span><span class="line"><span class="cl">    <span class="p">};</span>
</span></span><span class="line"><span class="cl">  <span class="p">},</span>
</span></span><span class="line"><span class="cl">  <span class="nx">methods</span><span class="o">:</span> <span class="p">{</span>
</span></span><span class="line"><span class="cl">    <span class="nx">handleClick() {</span>
</span></span><span class="line"><span class="cl">      <span class="nx">alert</span><span class="p">(</span><span class="s1">&#39;Button clicked!&#39;</span><span class="p">);</span>
</span></span><span class="line"><span class="cl">    <span class="p">}</span>
</span></span><span class="line"><span class="cl">  <span class="p">}</span>
</span></span><span class="line"><span class="cl"><span class="p">});</span>
</span></span><span class="line"><span class="cl">
</span></span><span class="line"><span class="cl"><span class="c1">// 链式调用：配置应用并绑定事件
</span></span></span><span class="line"><span class="cl"><span class="c1"></span><span class="nx">app</span>
</span></span><span class="line"><span class="cl">  <span class="p">.</span><span class="nx">component</span><span class="p">(</span><span class="s1">&#39;MyButton&#39;</span><span class="p">,</span> <span class="p">{</span>
</span></span><span class="line"><span class="cl">    <span class="nx">template</span><span class="o">:</span> <span class="sb">`&lt;button @click=&#34;handleClick&#34;&gt;Click Me&lt;/button&gt;`</span><span class="p">,</span>
</span></span><span class="line"><span class="cl">    <span class="nx">methods</span><span class="o">:</span> <span class="p">{</span>
</span></span><span class="line"><span class="cl">      <span class="nx">handleClick() {</span>
</span></span><span class="line"><span class="cl">        <span class="k">this</span><span class="p">.</span><span class="nx">$emit</span><span class="p">(</span><span class="s1">&#39;custom-click&#39;</span><span class="p">);</span>
</span></span><span class="line"><span class="cl">      <span class="p">}</span>
</span></span><span class="line"><span class="cl">    <span class="p">}</span>
</span></span><span class="line"><span class="cl">  <span class="p">})</span>
</span></span><span class="line"><span class="cl">  <span class="p">.</span><span class="nx">directive</span><span class="p">(</span><span class="s1">&#39;highlight&#39;</span><span class="p">,</span> <span class="p">{</span>
</span></span><span class="line"><span class="cl">    <span class="nx">mounted</span><span class="p">(</span><span class="nx">el</span><span class="p">)</span> <span class="p">{</span>
</span></span><span class="line"><span class="cl">      <span class="nx">el</span><span class="p">.</span><span class="nx">style</span><span class="p">.</span><span class="nx">backgroundColor</span> <span class="o">=</span> <span class="s1">&#39;yellow&#39;</span><span class="p">;</span>
</span></span><span class="line"><span class="cl">    <span class="p">}</span>
</span></span><span class="line"><span class="cl">  <span class="p">})</span>
</span></span><span class="line"><span class="cl">  <span class="p">.</span><span class="nx">mixin</span><span class="p">({</span>
</span></span><span class="line"><span class="cl">    <span class="nx">created() {</span>
</span></span><span class="line"><span class="cl">      <span class="nx">console</span><span class="p">.</span><span class="nx">log</span><span class="p">(</span><span class="s1">&#39;Mixin created hook&#39;</span><span class="p">);</span>
</span></span><span class="line"><span class="cl">    <span class="p">}</span>
</span></span><span class="line"><span class="cl">  <span class="p">})</span>
</span></span><span class="line"><span class="cl">  <span class="p">.</span><span class="nx">mount</span><span class="p">(</span><span class="s1">&#39;#app&#39;</span><span class="p">);</span> <span class="c1">// 挂载到 DOM
</span></span></span></code></pre></td></tr></table>
</div>
</div><h3 id="解释" class="headerLink">
    <a href="#%e8%a7%a3%e9%87%8a" class="header-mark"></a>解释</h3><p><code>createApp</code>:创建一个 Vue 应用实例。传入一个根组件配置对象，包含 data 和 methods。</p>]]></description></item></channel></rss>