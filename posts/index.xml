<rss xmlns:atom="http://www.w3.org/2005/Atom" version="2.0"><channel><title>所有文章 - Doごみ箱🪄</title><link>http://dodolalorc.cn/posts/</link><description>所有文章 | Doごみ箱🪄</description><generator>Hugo -- gohugo.io</generator><language>zh-CN</language><managingEditor>chenflora124@gmail.com (DODOLA)</managingEditor><webMaster>chenflora124@gmail.com (DODOLA)</webMaster><copyright>dodola</copyright><lastBuildDate>Mon, 17 Mar 2025 14:26:20 +0800</lastBuildDate><atom:link href="http://dodolalorc.cn/posts/" rel="self" type="application/rss+xml"/><item><title>大文件上传和下载问题</title><link>http://dodolalorc.cn/posts/large_file_upload/</link><pubDate>Mon, 17 Mar 2025 13:17:45 +0800</pubDate><author><name>DODOLA</name></author><guid>http://dodolalorc.cn/posts/large_file_upload/</guid><description><![CDATA[<div class="featured-image">
                <img src="https://img.dodolalorc.cn/i/2025/03/03/67c558f57d10e.png" referrerpolicy="no-referrer">
            </div><div class="details admonition abstract open">
        <div class="details-summary admonition-title">
            <i class="icon fas fa-list-ul fa-fw"></i>问题预设<i class="details-icon fas fa-angle-right fa-fw"></i>
        </div>
        <div class="details-content">
            <div class="admonition-content"><p>网络断开之后，之前上传的部分没了？</p>
<p>传着传着，网络波动了，结果没有了。</p>
<p>关机后可不可以接着传，怎么做到？</p>
</div>
        </div>
    </div>
<h3 id="术语" class="headerLink">
    <a href="#%e6%9c%af%e8%af%ad" class="header-mark"></a>术语</h3><ul>
<li>断点续传</li>
<li>断开重连重传</li>
<li><strong>切片上传</strong></li>
</ul>
<h2 id="切片上传" class="headerLink">
    <a href="#%e5%88%87%e7%89%87%e4%b8%8a%e4%bc%a0" class="header-mark"></a>切片上传</h2><p><strong>步骤</strong></p>
<ol>
<li>前端切片 chunk 5MB</li>
<li>将切片传递给后端，切片要去名：hash、index</li>
<li>后端组合切片</li>
</ol>
<h3 id="代码示例" class="headerLink">
    <a href="#%e4%bb%a3%e7%a0%81%e7%a4%ba%e4%be%8b" class="header-mark"></a>代码示例</h3><div class="highlight"><div class="chroma">
<table class="lntable"><tr><td class="lntd">
<pre tabindex="0" class="chroma"><code><span class="lnt"> 1
</span><span class="lnt"> 2
</span><span class="lnt"> 3
</span><span class="lnt"> 4
</span><span class="lnt"> 5
</span><span class="lnt"> 6
</span><span class="lnt"> 7
</span><span class="lnt"> 8
</span><span class="lnt"> 9
</span><span class="lnt">10
</span><span class="lnt">11
</span><span class="lnt">12
</span><span class="lnt">13
</span><span class="lnt">14
</span><span class="lnt">15
</span><span class="lnt">16
</span><span class="lnt">17
</span><span class="lnt">18
</span><span class="lnt">19
</span><span class="lnt">20
</span><span class="lnt">21
</span><span class="lnt">22
</span><span class="lnt">23
</span><span class="lnt">24
</span><span class="lnt">25
</span><span class="lnt">26
</span><span class="lnt">27
</span><span class="lnt">28
</span><span class="lnt">29
</span><span class="lnt">30
</span><span class="lnt">31
</span><span class="lnt">32
</span><span class="lnt">33
</span><span class="lnt">34
</span><span class="lnt">35
</span><span class="lnt">36
</span><span class="lnt">37
</span><span class="lnt">38
</span><span class="lnt">39
</span><span class="lnt">40
</span><span class="lnt">41
</span><span class="lnt">42
</span><span class="lnt">43
</span><span class="lnt">44
</span><span class="lnt">45
</span><span class="lnt">46
</span><span class="lnt">47
</span><span class="lnt">48
</span><span class="lnt">49
</span><span class="lnt">50
</span><span class="lnt">51
</span><span class="lnt">52
</span><span class="lnt">53
</span><span class="lnt">54
</span><span class="lnt">55
</span><span class="lnt">56
</span><span class="lnt">57
</span><span class="lnt">58
</span><span class="lnt">59
</span><span class="lnt">60
</span><span class="lnt">61
</span><span class="lnt">62
</span><span class="lnt">63
</span><span class="lnt">64
</span><span class="lnt">65
</span><span class="lnt">66
</span><span class="lnt">67
</span><span class="lnt">68
</span><span class="lnt">69
</span><span class="lnt">70
</span><span class="lnt">71
</span><span class="lnt">72
</span><span class="lnt">73
</span></code></pre></td>
<td class="lntd">
<pre tabindex="0" class="chroma"><code class="language-html" data-lang="html"><span class="line"><span class="cl"><span class="cp">&lt;!DOCTYPE html&gt;</span>
</span></span><span class="line"><span class="cl"><span class="p">&lt;</span><span class="nt">html</span> <span class="na">lang</span><span class="o">=</span><span class="s">&#34;en&#34;</span><span class="p">&gt;</span>
</span></span><span class="line"><span class="cl">
</span></span><span class="line"><span class="cl"><span class="p">&lt;</span><span class="nt">head</span><span class="p">&gt;</span>
</span></span><span class="line"><span class="cl">  <span class="p">&lt;</span><span class="nt">meta</span> <span class="na">charset</span><span class="o">=</span><span class="s">&#34;UTF-8&#34;</span><span class="p">&gt;</span>
</span></span><span class="line"><span class="cl">  <span class="p">&lt;</span><span class="nt">meta</span> <span class="na">name</span><span class="o">=</span><span class="s">&#34;viewport&#34;</span> <span class="na">content</span><span class="o">=</span><span class="s">&#34;width=device-width, initial-scale=1.0&#34;</span><span class="p">&gt;</span>
</span></span><span class="line"><span class="cl">  <span class="p">&lt;</span><span class="nt">title</span><span class="p">&gt;</span>大文件上传<span class="p">&lt;/</span><span class="nt">title</span><span class="p">&gt;</span>
</span></span><span class="line"><span class="cl"><span class="p">&lt;/</span><span class="nt">head</span><span class="p">&gt;</span>
</span></span><span class="line"><span class="cl">
</span></span><span class="line"><span class="cl"><span class="p">&lt;</span><span class="nt">body</span><span class="p">&gt;</span>
</span></span><span class="line"><span class="cl">  <span class="p">&lt;</span><span class="nt">input</span> <span class="na">type</span><span class="o">=</span><span class="s">&#34;file&#34;</span> <span class="na">id</span><span class="o">=</span><span class="s">&#34;file&#34;</span> <span class="na">multiple</span><span class="p">&gt;</span>
</span></span><span class="line"><span class="cl">  <span class="p">&lt;</span><span class="nt">button</span> <span class="na">id</span><span class="o">=</span><span class="s">&#34;upload&#34;</span><span class="p">&gt;</span>上传<span class="p">&lt;/</span><span class="nt">button</span><span class="p">&gt;</span>
</span></span><span class="line"><span class="cl"><span class="p">&lt;/</span><span class="nt">body</span><span class="p">&gt;</span>
</span></span><span class="line"><span class="cl">
</span></span><span class="line"><span class="cl"><span class="p">&lt;</span><span class="nt">script</span><span class="p">&gt;</span>
</span></span><span class="line"><span class="cl">
</span></span><span class="line"><span class="cl">  <span class="kr">const</span> <span class="nx">CHUNK_SIZE</span> <span class="o">=</span> <span class="mi">5</span> <span class="o">*</span> <span class="mi">1024</span> <span class="o">*</span> <span class="mi">1024</span><span class="p">;</span> <span class="c1">// 5MB
</span></span></span><span class="line"><span class="cl"><span class="c1"></span>
</span></span><span class="line"><span class="cl">
</span></span><span class="line"><span class="cl">  <span class="kd">function</span> <span class="nx">uploadFile</span><span class="p">()</span> <span class="p">{</span>
</span></span><span class="line"><span class="cl">    <span class="kr">const</span> <span class="nx">file</span> <span class="o">=</span> <span class="nb">document</span><span class="p">.</span><span class="nx">getElementById</span><span class="p">(</span><span class="s1">&#39;file&#39;</span><span class="p">).</span><span class="nx">files</span><span class="p">[</span><span class="mi">0</span><span class="p">];</span>
</span></span><span class="line"><span class="cl">    <span class="nx">console</span><span class="p">.</span><span class="nx">log</span><span class="p">(</span><span class="s1">&#39;上传文件&#39;</span><span class="p">,</span> <span class="nx">file</span><span class="p">.</span><span class="nx">name</span><span class="p">)</span>
</span></span><span class="line"><span class="cl">    <span class="k">if</span> <span class="p">(</span><span class="o">!</span><span class="nx">file</span><span class="p">)</span> <span class="p">{</span>
</span></span><span class="line"><span class="cl">      <span class="k">return</span>
</span></span><span class="line"><span class="cl">    <span class="p">}</span>
</span></span><span class="line"><span class="cl">
</span></span><span class="line"><span class="cl">    <span class="kr">const</span> <span class="nx">totalSize</span> <span class="o">=</span> <span class="nx">file</span><span class="p">.</span><span class="nx">size</span>
</span></span><span class="line"><span class="cl">    <span class="kr">const</span> <span class="nx">totalChunks</span> <span class="o">=</span> <span class="nb">Math</span><span class="p">.</span><span class="nx">ceil</span><span class="p">(</span><span class="nx">totalSize</span> <span class="o">/</span> <span class="nx">CHUNK_SIZE</span><span class="p">)</span>
</span></span><span class="line"><span class="cl">    <span class="kd">let</span> <span class="nx">currentChunk</span> <span class="o">=</span> <span class="mi">0</span>
</span></span><span class="line"><span class="cl">    <span class="kr">const</span> <span class="nx">chunks</span> <span class="o">=</span> <span class="p">[]</span>
</span></span><span class="line"><span class="cl">
</span></span><span class="line"><span class="cl">    <span class="kd">function</span> <span class="nx">uploadChunk</span><span class="p">()</span> <span class="p">{</span>
</span></span><span class="line"><span class="cl">      <span class="nx">console</span><span class="p">.</span><span class="nx">log</span><span class="p">(</span><span class="s1">&#39;上传第&#39;</span><span class="p">,</span> <span class="nx">currentChunk</span><span class="p">,</span> <span class="s1">&#39;块&#39;</span><span class="p">)</span>
</span></span><span class="line"><span class="cl">      <span class="k">if</span> <span class="p">(</span><span class="nx">currentChunk</span> <span class="o">&gt;=</span> <span class="nx">totalChunks</span><span class="p">)</span> <span class="p">{</span>
</span></span><span class="line"><span class="cl">        <span class="nx">console</span><span class="p">.</span><span class="nx">log</span><span class="p">(</span><span class="s1">&#39;上传完成&#39;</span><span class="p">)</span>
</span></span><span class="line"><span class="cl">        <span class="k">return</span>
</span></span><span class="line"><span class="cl">      <span class="p">}</span>
</span></span><span class="line"><span class="cl">      <span class="kr">const</span> <span class="nx">start</span> <span class="o">=</span> <span class="nx">currentChunk</span> <span class="o">*</span> <span class="nx">CHUNK_SIZE</span>
</span></span><span class="line"><span class="cl">      <span class="kr">const</span> <span class="nx">end</span> <span class="o">=</span> <span class="nb">Math</span><span class="p">.</span><span class="nx">min</span><span class="p">(</span><span class="nx">totalSize</span><span class="p">,</span> <span class="nx">start</span> <span class="o">+</span> <span class="nx">CHUNK_SIZE</span><span class="p">)</span>
</span></span><span class="line"><span class="cl">      <span class="kr">const</span> <span class="nx">chunk</span> <span class="o">=</span> <span class="nx">file</span><span class="p">.</span><span class="nx">slice</span><span class="p">(</span><span class="nx">start</span><span class="p">,</span> <span class="nx">end</span><span class="p">)</span>
</span></span><span class="line"><span class="cl">
</span></span><span class="line"><span class="cl">      <span class="kr">const</span> <span class="nx">formData</span> <span class="o">=</span> <span class="k">new</span> <span class="nx">FormData</span><span class="p">()</span>
</span></span><span class="line"><span class="cl">      <span class="nx">formData</span><span class="p">.</span><span class="nx">append</span><span class="p">(</span><span class="s1">&#39;file&#39;</span><span class="p">,</span> <span class="nx">chunk</span><span class="p">)</span>
</span></span><span class="line"><span class="cl">      <span class="nx">formData</span><span class="p">.</span><span class="nx">append</span><span class="p">(</span><span class="s1">&#39;index&#39;</span><span class="p">,</span> <span class="nx">currentChunk</span><span class="p">)</span>
</span></span><span class="line"><span class="cl">      <span class="nx">formData</span><span class="p">.</span><span class="nx">append</span><span class="p">(</span><span class="s1">&#39;totalChunks&#39;</span><span class="p">,</span> <span class="nx">totalChunks</span><span class="p">)</span>
</span></span><span class="line"><span class="cl">      <span class="nx">formData</span><span class="p">.</span><span class="nx">append</span><span class="p">(</span><span class="s1">&#39;filename&#39;</span><span class="p">,</span> <span class="nx">file</span><span class="p">.</span><span class="nx">name</span><span class="p">)</span>
</span></span><span class="line"><span class="cl">
</span></span><span class="line"><span class="cl">      <span class="c1">// fetch(&#39;/api/upload&#39;, {
</span></span></span><span class="line"><span class="cl"><span class="c1"></span>      <span class="c1">//   method: &#39;POST&#39;,
</span></span></span><span class="line"><span class="cl"><span class="c1"></span>      <span class="c1">//   body: formData
</span></span></span><span class="line"><span class="cl"><span class="c1"></span>      <span class="c1">// }).then(res =&gt; {
</span></span></span><span class="line"><span class="cl"><span class="c1"></span>      <span class="c1">//   if (res.ok) {
</span></span></span><span class="line"><span class="cl"><span class="c1"></span>      <span class="c1">//     currentChunk++;
</span></span></span><span class="line"><span class="cl"><span class="c1"></span>      <span class="c1">//     uploadChunk() // 递归上传下一块
</span></span></span><span class="line"><span class="cl"><span class="c1"></span>      <span class="c1">//   } else {
</span></span></span><span class="line"><span class="cl"><span class="c1"></span>      <span class="c1">//     throw new Error(&#39;上传失败&#39;)
</span></span></span><span class="line"><span class="cl"><span class="c1"></span>      <span class="c1">//   }
</span></span></span><span class="line"><span class="cl"><span class="c1"></span>      <span class="c1">// }).catch(err =&gt; {
</span></span></span><span class="line"><span class="cl"><span class="c1"></span>      <span class="c1">//   console.error(err)
</span></span></span><span class="line"><span class="cl"><span class="c1"></span>      <span class="c1">// });
</span></span></span><span class="line"><span class="cl"><span class="c1"></span>
</span></span><span class="line"><span class="cl">      <span class="nx">currentChunk</span><span class="o">++</span><span class="p">;</span>
</span></span><span class="line"><span class="cl">      <span class="nx">uploadChunk</span><span class="p">()</span> <span class="c1">// 递归上传下一块
</span></span></span><span class="line"><span class="cl"><span class="c1"></span>    <span class="p">};</span>
</span></span><span class="line"><span class="cl">
</span></span><span class="line"><span class="cl">    <span class="c1">// 开始上传
</span></span></span><span class="line"><span class="cl"><span class="c1"></span>    <span class="nx">uploadChunk</span><span class="p">();</span>
</span></span><span class="line"><span class="cl">  <span class="p">};</span>
</span></span><span class="line"><span class="cl">
</span></span><span class="line"><span class="cl">  <span class="nb">document</span><span class="p">.</span><span class="nx">getElementById</span><span class="p">(</span><span class="s1">&#39;upload&#39;</span><span class="p">).</span><span class="nx">addEventListener</span><span class="p">(</span><span class="s1">&#39;click&#39;</span><span class="p">,</span> <span class="nx">uploadFile</span><span class="p">);</span>
</span></span><span class="line"><span class="cl"><span class="p">&lt;/</span><span class="nt">script</span><span class="p">&gt;</span>
</span></span><span class="line"><span class="cl">
</span></span><span class="line"><span class="cl"><span class="p">&lt;/</span><span class="nt">html</span><span class="p">&gt;</span>
</span></span></code></pre></td></tr></table>
</div>
</div><h3 id="优化" class="headerLink">
    <a href="#%e4%bc%98%e5%8c%96" class="header-mark"></a>优化</h3><h4 id="压缩文件" class="headerLink">
    <a href="#%e5%8e%8b%e7%bc%a9%e6%96%87%e4%bb%b6" class="header-mark"></a>压缩文件</h4><p>上传前对文件进行压缩，减少传输的数据量。</p>]]></description></item><item><title>前端流量控制常用手段</title><link>http://dodolalorc.cn/posts/flow_control/</link><pubDate>Mon, 17 Mar 2025 11:40:19 +0800</pubDate><author><name>DODOLA</name></author><guid>http://dodolalorc.cn/posts/flow_control/</guid><description><![CDATA[<div class="featured-image">
                <img src="https://img.dodolalorc.cn/i/2025/03/03/67c5599367fe0.jpg" referrerpolicy="no-referrer">
            </div><div class="details admonition abstract open">
        <div class="details-summary admonition-title">
            <i class="icon fas fa-list-ul fa-fw"></i>问题预设<i class="details-icon fas fa-angle-right fa-fw"></i>
        </div>
        <div class="details-content">
            <div class="admonition-content">如何解决页面请求接口的大规模并发问题？</div>
        </div>
    </div>
<p>在需要处理大规模请求的情境中，做好流量控制可以提升系统稳定性和性能。</p>
<h2 id="防抖节流" class="headerLink">
    <a href="#%e9%98%b2%e6%8a%96%e8%8a%82%e6%b5%81" class="header-mark"></a>防抖/节流</h2><h3 id="防抖debounce" class="headerLink">
    <a href="#%e9%98%b2%e6%8a%96debounce" class="header-mark"></a>防抖（Debounce）</h3><p>在事件触发后，延迟执行函数，若在延迟期间再次出发，则重新计时，如在搜索框输入、调整窗口大小时。</p>
<h4 id="实现" class="headerLink">
    <a href="#%e5%ae%9e%e7%8e%b0" class="header-mark"></a>实现</h4><div class="highlight"><div class="chroma">
<table class="lntable"><tr><td class="lntd">
<pre tabindex="0" class="chroma"><code><span class="lnt"> 1
</span><span class="lnt"> 2
</span><span class="lnt"> 3
</span><span class="lnt"> 4
</span><span class="lnt"> 5
</span><span class="lnt"> 6
</span><span class="lnt"> 7
</span><span class="lnt"> 8
</span><span class="lnt"> 9
</span><span class="lnt">10
</span><span class="lnt">11
</span><span class="lnt">12
</span><span class="lnt">13
</span><span class="lnt">14
</span><span class="lnt">15
</span><span class="lnt">16
</span><span class="lnt">17
</span></code></pre></td>
<td class="lntd">
<pre tabindex="0" class="chroma"><code class="language-js" data-lang="js"><span class="line"><span class="cl"><span class="kd">function</span> <span class="nx">debounce</span><span class="p">(</span><span class="nx">fn</span><span class="p">,</span> <span class="nx">wait</span><span class="p">)</span> <span class="p">{</span>
</span></span><span class="line"><span class="cl">    <span class="kd">let</span> <span class="nx">timeout</span><span class="p">;</span>
</span></span><span class="line"><span class="cl">    <span class="k">return</span> <span class="kd">function</span> <span class="p">()</span> <span class="p">{</span>
</span></span><span class="line"><span class="cl">        <span class="kd">let</span> <span class="nx">context</span> <span class="o">=</span> <span class="k">this</span><span class="p">;</span>
</span></span><span class="line"><span class="cl">        <span class="kd">let</span> <span class="nx">args</span> <span class="o">=</span> <span class="nx">arguments</span><span class="p">;</span>
</span></span><span class="line"><span class="cl">        <span class="nx">clearTimeout</span><span class="p">(</span><span class="nx">timeout</span><span class="p">);</span>
</span></span><span class="line"><span class="cl">        <span class="nx">timeout</span> <span class="o">=</span> <span class="nx">setTimeout</span><span class="p">(</span><span class="kd">function</span> <span class="p">()</span> <span class="p">{</span>
</span></span><span class="line"><span class="cl">            <span class="nx">fn</span><span class="p">.</span><span class="nx">apply</span><span class="p">(</span><span class="nx">context</span><span class="p">,</span> <span class="nx">args</span><span class="p">);</span>
</span></span><span class="line"><span class="cl">        <span class="p">},</span> <span class="nx">wait</span><span class="p">);</span>
</span></span><span class="line"><span class="cl">    <span class="p">}</span>
</span></span><span class="line"><span class="cl"><span class="p">}</span>
</span></span><span class="line"><span class="cl">
</span></span><span class="line"><span class="cl"><span class="kr">const</span> <span class="nx">sample</span> <span class="o">=</span> <span class="kd">function</span> <span class="p">()</span> <span class="p">{</span>
</span></span><span class="line"><span class="cl">    <span class="nx">console</span><span class="p">.</span><span class="nx">log</span><span class="p">(</span><span class="s2">&#34;xxx&#34;</span><span class="p">);</span>
</span></span><span class="line"><span class="cl"><span class="p">}</span>
</span></span><span class="line"><span class="cl">
</span></span><span class="line"><span class="cl"><span class="nb">window</span><span class="p">.</span><span class="nx">addEventListener</span><span class="p">(</span><span class="s1">&#39;resize&#39;</span><span class="p">,</span> <span class="nx">debounce</span><span class="p">(</span><span class="nx">sample</span><span class="p">,</span> <span class="mi">300</span><span class="p">));</span>
</span></span></code></pre></td></tr></table>
</div>
</div><h4 id="为什么在-debounce-函数中使用-let" class="headerLink">
    <a href="#%e4%b8%ba%e4%bb%80%e4%b9%88%e5%9c%a8-debounce-%e5%87%bd%e6%95%b0%e4%b8%ad%e4%bd%bf%e7%94%a8-let" class="header-mark"></a>为什么在  <code>debounce</code>  函数中使用  <code>let</code>？</h4><p>在  <code>debounce</code>  函数中，<code>timeout</code>  变量需要满足以下条件：</p>]]></description></item><item><title>JavaScript 链式调用 | 设计模式 笔记</title><link>http://dodolalorc.cn/posts/method_chaining/</link><pubDate>Mon, 17 Mar 2025 09:26:02 +0800</pubDate><author><name>DODOLA</name></author><guid>http://dodolalorc.cn/posts/method_chaining/</guid><description><![CDATA[<div class="featured-image">
                <img src="https://img.dodolalorc.cn/i/2025/03/03/67c55994138f8.jpg" referrerpolicy="no-referrer">
            </div><h2 id="vue-从-createapp-开始的链式调用" class="headerLink">
    <a href="#vue-%e4%bb%8e-createapp-%e5%bc%80%e5%a7%8b%e7%9a%84%e9%93%be%e5%bc%8f%e8%b0%83%e7%94%a8" class="header-mark"></a>Vue :从 createApp 开始的链式调用</h2><h3 id="代码示例" class="headerLink">
    <a href="#%e4%bb%a3%e7%a0%81%e7%a4%ba%e4%be%8b" class="header-mark"></a>代码示例</h3><div class="highlight"><div class="chroma">
<table class="lntable"><tr><td class="lntd">
<pre tabindex="0" class="chroma"><code><span class="lnt"> 1
</span><span class="lnt"> 2
</span><span class="lnt"> 3
</span><span class="lnt"> 4
</span><span class="lnt"> 5
</span><span class="lnt"> 6
</span><span class="lnt"> 7
</span><span class="lnt"> 8
</span><span class="lnt"> 9
</span><span class="lnt">10
</span><span class="lnt">11
</span><span class="lnt">12
</span><span class="lnt">13
</span><span class="lnt">14
</span><span class="lnt">15
</span><span class="lnt">16
</span><span class="lnt">17
</span><span class="lnt">18
</span><span class="lnt">19
</span><span class="lnt">20
</span><span class="lnt">21
</span><span class="lnt">22
</span><span class="lnt">23
</span><span class="lnt">24
</span><span class="lnt">25
</span><span class="lnt">26
</span><span class="lnt">27
</span><span class="lnt">28
</span><span class="lnt">29
</span><span class="lnt">30
</span><span class="lnt">31
</span><span class="lnt">32
</span><span class="lnt">33
</span><span class="lnt">34
</span><span class="lnt">35
</span><span class="lnt">36
</span><span class="lnt">37
</span></code></pre></td>
<td class="lntd">
<pre tabindex="0" class="chroma"><code class="language-ts" data-lang="ts"><span class="line"><span class="cl"><span class="kr">import</span> <span class="p">{</span> <span class="nx">createApp</span> <span class="p">}</span> <span class="kr">from</span> <span class="s1">&#39;vue&#39;</span><span class="p">;</span>
</span></span><span class="line"><span class="cl">
</span></span><span class="line"><span class="cl"><span class="c1">// 创建一个 Vue 应用实例
</span></span></span><span class="line"><span class="cl"><span class="c1"></span><span class="kr">const</span> <span class="nx">app</span> <span class="o">=</span> <span class="nx">createApp</span><span class="p">({</span>
</span></span><span class="line"><span class="cl">  <span class="nx">data() {</span>
</span></span><span class="line"><span class="cl">    <span class="k">return</span> <span class="p">{</span>
</span></span><span class="line"><span class="cl">      <span class="nx">message</span><span class="o">:</span> <span class="s1">&#39;Hello, Vue!&#39;</span>
</span></span><span class="line"><span class="cl">    <span class="p">};</span>
</span></span><span class="line"><span class="cl">  <span class="p">},</span>
</span></span><span class="line"><span class="cl">  <span class="nx">methods</span><span class="o">:</span> <span class="p">{</span>
</span></span><span class="line"><span class="cl">    <span class="nx">handleClick() {</span>
</span></span><span class="line"><span class="cl">      <span class="nx">alert</span><span class="p">(</span><span class="s1">&#39;Button clicked!&#39;</span><span class="p">);</span>
</span></span><span class="line"><span class="cl">    <span class="p">}</span>
</span></span><span class="line"><span class="cl">  <span class="p">}</span>
</span></span><span class="line"><span class="cl"><span class="p">});</span>
</span></span><span class="line"><span class="cl">
</span></span><span class="line"><span class="cl"><span class="c1">// 链式调用：配置应用并绑定事件
</span></span></span><span class="line"><span class="cl"><span class="c1"></span><span class="nx">app</span>
</span></span><span class="line"><span class="cl">  <span class="p">.</span><span class="nx">component</span><span class="p">(</span><span class="s1">&#39;MyButton&#39;</span><span class="p">,</span> <span class="p">{</span>
</span></span><span class="line"><span class="cl">    <span class="nx">template</span><span class="o">:</span> <span class="sb">`&lt;button @click=&#34;handleClick&#34;&gt;Click Me&lt;/button&gt;`</span><span class="p">,</span>
</span></span><span class="line"><span class="cl">    <span class="nx">methods</span><span class="o">:</span> <span class="p">{</span>
</span></span><span class="line"><span class="cl">      <span class="nx">handleClick() {</span>
</span></span><span class="line"><span class="cl">        <span class="k">this</span><span class="p">.</span><span class="nx">$emit</span><span class="p">(</span><span class="s1">&#39;custom-click&#39;</span><span class="p">);</span>
</span></span><span class="line"><span class="cl">      <span class="p">}</span>
</span></span><span class="line"><span class="cl">    <span class="p">}</span>
</span></span><span class="line"><span class="cl">  <span class="p">})</span>
</span></span><span class="line"><span class="cl">  <span class="p">.</span><span class="nx">directive</span><span class="p">(</span><span class="s1">&#39;highlight&#39;</span><span class="p">,</span> <span class="p">{</span>
</span></span><span class="line"><span class="cl">    <span class="nx">mounted</span><span class="p">(</span><span class="nx">el</span><span class="p">)</span> <span class="p">{</span>
</span></span><span class="line"><span class="cl">      <span class="nx">el</span><span class="p">.</span><span class="nx">style</span><span class="p">.</span><span class="nx">backgroundColor</span> <span class="o">=</span> <span class="s1">&#39;yellow&#39;</span><span class="p">;</span>
</span></span><span class="line"><span class="cl">    <span class="p">}</span>
</span></span><span class="line"><span class="cl">  <span class="p">})</span>
</span></span><span class="line"><span class="cl">  <span class="p">.</span><span class="nx">mixin</span><span class="p">({</span>
</span></span><span class="line"><span class="cl">    <span class="nx">created() {</span>
</span></span><span class="line"><span class="cl">      <span class="nx">console</span><span class="p">.</span><span class="nx">log</span><span class="p">(</span><span class="s1">&#39;Mixin created hook&#39;</span><span class="p">);</span>
</span></span><span class="line"><span class="cl">    <span class="p">}</span>
</span></span><span class="line"><span class="cl">  <span class="p">})</span>
</span></span><span class="line"><span class="cl">  <span class="p">.</span><span class="nx">mount</span><span class="p">(</span><span class="s1">&#39;#app&#39;</span><span class="p">);</span> <span class="c1">// 挂载到 DOM
</span></span></span></code></pre></td></tr></table>
</div>
</div><h3 id="解释" class="headerLink">
    <a href="#%e8%a7%a3%e9%87%8a" class="header-mark"></a>解释</h3><p><code>createApp</code>:创建一个 Vue 应用实例。传入一个根组件配置对象，包含 data 和 methods。</p>]]></description></item><item><title>LeetCode Hot 100记录（19/100）</title><link>http://dodolalorc.cn/posts/lchot100/</link><pubDate>Thu, 13 Mar 2025 14:13:22 +0800</pubDate><author><name>DODOLA</name></author><guid>http://dodolalorc.cn/posts/lchot100/</guid><description><![CDATA[<div class="featured-image">
                <img src="https://img.dodolalorc.cn/i/2025/03/03/67c55994b7733.jpg" referrerpolicy="no-referrer">
            </div><h1 id="哈希33" class="headerLink">
    <a href="#%e5%93%88%e5%b8%8c33" class="header-mark"></a>哈希(3/3)</h1><h2 id="1-两数之和" class="headerLink">
    <a href="#1-%e4%b8%a4%e6%95%b0%e4%b9%8b%e5%92%8c" class="header-mark"></a>1. 两数之和</h2><h3 id="题意" class="headerLink">
    <a href="#%e9%a2%98%e6%84%8f" class="header-mark"></a>题意</h3><p>给定一个整数数组  <code>nums</code>  和一个整数目标值  <code>target</code>，请你在该数组中找出  <strong>和为目标值</strong> <em><code>target</code></em>  的那  <strong>两个</strong>  整数，并返回它们的数组下标。</p>
<p>你可以假设每种输入只会对应一个答案，并且你不能使用两次相同的元素。</p>]]></description></item><item><title>Rust编程区块链项目 BlockChain in Rust</title><link>http://dodolalorc.cn/posts/block_chain/</link><pubDate>Mon, 03 Mar 2025 15:20:51 +0800</pubDate><author><name>DODOLA</name></author><guid>http://dodolalorc.cn/posts/block_chain/</guid><description><![CDATA[<div class="featured-image">
                <img src="https://img.dodolalorc.cn/i/2025/03/03/67c559ab9df13.jpg" referrerpolicy="no-referrer">
            </div><div class="details admonition info">
        <div class="details-summary admonition-title">
            <i class="icon fas fa-info-circle fa-fw"></i>GitHub仓库地址<i class="details-icon fas fa-angle-right fa-fw"></i>
        </div>
        <div class="details-content">
            <div class="admonition-content">GitHub 仓库地址：<a href="https://github.com/Florae006/BlockChain" target="_blank" rel="noopener noreferrer">BlockChain</a></div>
        </div>
    </div>
<h2 id="一产品方案" class="headerLink">
    <a href="#%e4%b8%80%e4%ba%a7%e5%93%81%e6%96%b9%e6%a1%88" class="header-mark"></a>一、产品方案</h2><h3 id="项目目标" class="headerLink">
    <a href="#%e9%a1%b9%e7%9b%ae%e7%9b%ae%e6%a0%87" class="header-mark"></a>项目目标</h3><p>实现一个轻量的简单高效的区块链系统项目，用于学习和研究。</p>
<ul>
<li>学习区块链的相关知识，实现一个由 Rust 实现的简单区块链系统。</li>
<li>能够生成创世区块，支持区块的创建、验证和链式储存，实现工作量证明算法。</li>
<li>利用本机端口构建服务系统，实现交易的广播、挖矿功能、简单的交易校验功能。</li>
</ul>
<h3 id="用户需求分析" class="headerLink">
    <a href="#%e7%94%a8%e6%88%b7%e9%9c%80%e6%b1%82%e5%88%86%e6%9e%90" class="header-mark"></a>用户需求分析</h3><ul>
<li>用户可以通过命令行启动本地服务，在<code>main.rs</code>中配置路由，参考下方的<a href="#%e4%bd%bf%e7%94%a8%e6%89%8b%e5%86%8c" rel="">使用手册</a>，进行创建交易、挖矿、查看信息等。</li>
<li>通过时间戳、<code>lock_time</code>、签名校验等完成简单的对交易信息的核对。</li>
<li>系统具有一定的可扩展性，用户可以通过调整 API 接口快速调试。</li>
</ul>
<h3 id="主要功能" class="headerLink">
    <a href="#%e4%b8%bb%e8%a6%81%e5%8a%9f%e8%83%bd" class="header-mark"></a>主要功能</h3><p>本产品主要由<code>src/</code>下的<code>.rs</code>文件实现主要功能。</p>]]></description></item><item><title>2025牛客暑寒假多校训练营Day4</title><link>http://dodolalorc.cn/posts/nc25wd4/</link><pubDate>Sun, 02 Mar 2025 18:46:04 +0800</pubDate><author><name>DODOLA</name></author><guid>http://dodolalorc.cn/posts/nc25wd4/</guid><description><![CDATA[<div class="featured-image">
                <img src="https://img.dodolalorc.cn/i/2025/03/02/67c461f0d8665.jpg" referrerpolicy="no-referrer">
            </div><h2 id="a" class="headerLink">
    <a href="#a" class="header-mark"></a>A</h2><h3 id="题意" class="headerLink">
    <a href="#%e9%a2%98%e6%84%8f" class="header-mark"></a>题意</h3><h4 id="数据范围" class="headerLink">
    <a href="#%e6%95%b0%e6%8d%ae%e8%8c%83%e5%9b%b4" class="header-mark"></a>数据范围</h4><h3 id="思路" class="headerLink">
    <a href="#%e6%80%9d%e8%b7%af" class="header-mark"></a>思路</h3><h3 id="代码" class="headerLink">
    <a href="#%e4%bb%a3%e7%a0%81" class="header-mark"></a>代码</h3><h2 id="b-tokitsukaze-and-balance-string-easy" class="headerLink">
    <a href="#b-tokitsukaze-and-balance-string-easy" class="header-mark"></a>B Tokitsukaze and Balance String (easy)</h2><h3 id="题意-1" class="headerLink">
    <a href="#%e9%a2%98%e6%84%8f-1" class="header-mark"></a>题意</h3><p>定义字符串是平衡的：字符串中<code>01</code>的连续子串的数量和<code>10</code>的连续子串的数量相同。</p>
<p>定义字符串<code>s</code>的<code>val(s)</code>：</p>
<ul>
<li>将字符串<code>s</code>的某位置<code>i</code>的字符倒置（<code>1</code>变成<code>0</code>，<code>0</code>变成<code>1</code>）后，字符串是平衡的，这样的位置的总数</li>
</ul>
<p>现在有一个由<code>1</code>、<code>0</code>和<code>?</code>组成的字符串，<code>?</code>可以任意换成<code>1</code>或<code>0</code>，求所有的填写完成的字符串的<code>val(s)</code>的总和，模数是$10^9+7$。</p>]]></description></item><item><title>2025牛客暑寒假多校训练营Day3（完結）</title><link>http://dodolalorc.cn/posts/nc25wd3/</link><pubDate>Sun, 16 Feb 2025 08:53:02 +0800</pubDate><author><name>DODOLA</name></author><guid>http://dodolalorc.cn/posts/nc25wd3/</guid><description><![CDATA[<div class="featured-image">
                <img src="https://img.dodolalorc.cn/i/2025/02/16/67b17bacd70e1.jpg" referrerpolicy="no-referrer">
            </div><h2 id="a-智乃的博弈游戏" class="headerLink">
    <a href="#a-%e6%99%ba%e4%b9%83%e7%9a%84%e5%8d%9a%e5%bc%88%e6%b8%b8%e6%88%8f" class="header-mark"></a>A 智乃的博弈游戏</h2><h3 id="题意" class="headerLink">
    <a href="#%e9%a2%98%e6%84%8f" class="header-mark"></a>题意</h3><p>有一堆$n$个石子，每次可以拿走$x$个石子，要求$x$是一个不大于$n$且与$n$互质的数，当面对$1$时选手获胜，询问智乃（先手玩家）能否获胜。</p>
<h4 id="数据范围" class="headerLink">
    <a href="#%e6%95%b0%e6%8d%ae%e8%8c%83%e5%9b%b4" class="header-mark"></a>数据范围</h4><ul>
<li>$1\leq n\leq 1e18$</li>
</ul>
<h3 id="思路" class="headerLink">
    <a href="#%e6%80%9d%e8%b7%af" class="header-mark"></a>思路</h3><p>必胜点是剩余 1，则 2 是必败点，两个选手都不希望对手面对 1，都希望对手面对 2。</p>
<p>如果当前剩余$n$是奇数，则选手一定可以操作将剩余数量变成偶数（只拿一个）。面对偶数的选手，能选的互质的数一定是一个奇数，偶数减去奇数会变成奇数，下一轮回到奇数的情况，如果某一方保持偶数，一定会到剩余$2$的情况，也就是必败点。</p>]]></description></item><item><title>2025牛客暑寒假多校训练营Day2</title><link>http://dodolalorc.cn/posts/nc25wd2/</link><pubDate>Thu, 06 Feb 2025 00:40:31 +0800</pubDate><author><name>DODOLA</name></author><guid>http://dodolalorc.cn/posts/nc25wd2/</guid><description><![CDATA[<div class="featured-image">
                <img src="https://img.dodolalorc.cn/i/2025/02/06/67a3a57b557f6.jpg" referrerpolicy="no-referrer">
            </div><h2 id="a-一起奏响历史之音" class="headerLink">
    <a href="#a-%e4%b8%80%e8%b5%b7%e5%a5%8f%e5%93%8d%e5%8e%86%e5%8f%b2%e4%b9%8b%e9%9f%b3" class="header-mark"></a>A 一起奏响历史之音！</h2><h3 id="题意" class="headerLink">
    <a href="#%e9%a2%98%e6%84%8f" class="header-mark"></a>题意</h3><p>中国传统五声调中包含 1、2、3、5、6，判断一个乐谱是否仅由全部或部分五声调铺成。</p>
<h3 id="思路" class="headerLink">
    <a href="#%e6%80%9d%e8%b7%af" class="header-mark"></a>思路</h3><p>按题意判断即可。</p>
<h3 id="代码" class="headerLink">
    <a href="#%e4%bb%a3%e7%a0%81" class="header-mark"></a>代码</h3><div class="highlight"><div class="chroma">
<table class="lntable"><tr><td class="lntd">
<pre tabindex="0" class="chroma"><code><span class="lnt"> 1
</span><span class="lnt"> 2
</span><span class="lnt"> 3
</span><span class="lnt"> 4
</span><span class="lnt"> 5
</span><span class="lnt"> 6
</span><span class="lnt"> 7
</span><span class="lnt"> 8
</span><span class="lnt"> 9
</span><span class="lnt">10
</span><span class="lnt">11
</span><span class="lnt">12
</span><span class="lnt">13
</span><span class="lnt">14
</span><span class="lnt">15
</span></code></pre></td>
<td class="lntd">
<pre tabindex="0" class="chroma"><code class="language-cpp" data-lang="cpp"><span class="line"><span class="cl"><span class="kt">void</span> <span class="nf">solve</span><span class="p">()</span> <span class="p">{</span>
</span></span><span class="line"><span class="cl">  <span class="kt">bool</span> <span class="n">flag</span> <span class="o">=</span> <span class="nb">true</span><span class="p">;</span>
</span></span><span class="line"><span class="cl">  <span class="n">set</span><span class="o">&lt;</span><span class="n">ll</span><span class="o">&gt;</span> <span class="n">st</span> <span class="o">=</span> <span class="p">{</span><span class="mi">1</span><span class="p">,</span> <span class="mi">2</span><span class="p">,</span> <span class="mi">3</span><span class="p">,</span> <span class="mi">5</span><span class="p">,</span> <span class="mi">6</span><span class="p">};</span>
</span></span><span class="line"><span class="cl">  <span class="n">ll</span> <span class="n">x</span><span class="p">;</span>
</span></span><span class="line"><span class="cl">  <span class="k">while</span> <span class="p">(</span><span class="n">cin</span> <span class="o">&gt;&gt;</span> <span class="n">x</span><span class="p">)</span> <span class="p">{</span>
</span></span><span class="line"><span class="cl">    <span class="k">if</span> <span class="p">(</span><span class="n">st</span><span class="p">.</span><span class="n">find</span><span class="p">(</span><span class="n">x</span><span class="p">)</span> <span class="o">==</span> <span class="n">st</span><span class="p">.</span><span class="n">end</span><span class="p">())</span> <span class="p">{</span>
</span></span><span class="line"><span class="cl">      <span class="n">flag</span> <span class="o">=</span> <span class="nb">false</span><span class="p">;</span>
</span></span><span class="line"><span class="cl">    <span class="p">}</span>
</span></span><span class="line"><span class="cl">  <span class="p">}</span>
</span></span><span class="line"><span class="cl">  <span class="k">if</span> <span class="p">(</span><span class="n">flag</span><span class="p">)</span> <span class="p">{</span>
</span></span><span class="line"><span class="cl">    <span class="n">cout</span> <span class="o">&lt;&lt;</span> <span class="s">&#34;YES</span><span class="se">\n</span><span class="s">&#34;</span><span class="p">;</span>
</span></span><span class="line"><span class="cl">  <span class="p">}</span> <span class="k">else</span> <span class="p">{</span>
</span></span><span class="line"><span class="cl">    <span class="n">cout</span> <span class="o">&lt;&lt;</span> <span class="s">&#34;NO</span><span class="se">\n</span><span class="s">&#34;</span><span class="p">;</span>
</span></span><span class="line"><span class="cl">  <span class="p">}</span>
</span></span><span class="line"><span class="cl"><span class="p">}</span>
</span></span></code></pre></td></tr></table>
</div>
</div><h2 id="b-能去你家蹭口饭吃吗" class="headerLink">
    <a href="#b-%e8%83%bd%e5%8e%bb%e4%bd%a0%e5%ae%b6%e8%b9%ad%e5%8f%a3%e9%a5%ad%e5%90%83%e5%90%97" class="header-mark"></a>B 能去你家蹭口饭吃吗</h2><h3 id="题意-1" class="headerLink">
    <a href="#%e9%a2%98%e6%84%8f-1" class="header-mark"></a>题意</h3><p>给出一个数组$a$，找到一个整数，要求整数尽可能大，但是至少要比数组中一半数量的数小。</p>]]></description></item><item><title>2025牛客暑寒假多校训练营Day1（完結）</title><link>http://dodolalorc.cn/posts/nc25wd1/</link><pubDate>Thu, 23 Jan 2025 12:58:36 +0800</pubDate><author><name>DODOLA</name></author><guid>http://dodolalorc.cn/posts/nc25wd1/</guid><description><![CDATA[<div class="featured-image">
                <img src="https://img.dodolalorc.cn/i/2025/02/05/67a26952e01a0.jpg" referrerpolicy="no-referrer">
            </div><h2 id="a-茕茕孑立之影" class="headerLink">
    <a href="#a-%e8%8c%95%e8%8c%95%e5%ad%91%e7%ab%8b%e4%b9%8b%e5%bd%b1" class="header-mark"></a>A 茕茕孑立之影</h2><h3 id="题意" class="headerLink">
    <a href="#%e9%a2%98%e6%84%8f" class="header-mark"></a>题意</h3><p>找一个不超过$1e18$的数$x$，使得$x$既不是任何$a_i$的倍数，也不是任何$a_i$的因数。若没有输出$-1$。</p>
<h4 id="数据范围" class="headerLink">
    <a href="#%e6%95%b0%e6%8d%ae%e8%8c%83%e5%9b%b4" class="header-mark"></a>数据范围</h4><ul>
<li>$1\leq n\leq 1e5$</li>
<li>$1\leq a_i\leq 1e9$</li>
</ul>
<h3 id="思路" class="headerLink">
    <a href="#%e6%80%9d%e8%b7%af" class="header-mark"></a>思路</h3><p>观察到，如果数组中有$1$则不存在这样的数。</p>
<p>$1\leq a_i\leq 1e9$，而$1\leq x\leq 1e18$，有解时任意数=输出一个大于$1e9$的质数即可。</p>
<h3 id="代码" class="headerLink">
    <a href="#%e4%bb%a3%e7%a0%81" class="header-mark"></a>代码</h3><div class="highlight"><div class="chroma">
<table class="lntable"><tr><td class="lntd">
<pre tabindex="0" class="chroma"><code><span class="lnt"> 1
</span><span class="lnt"> 2
</span><span class="lnt"> 3
</span><span class="lnt"> 4
</span><span class="lnt"> 5
</span><span class="lnt"> 6
</span><span class="lnt"> 7
</span><span class="lnt"> 8
</span><span class="lnt"> 9
</span><span class="lnt">10
</span><span class="lnt">11
</span><span class="lnt">12
</span><span class="lnt">13
</span></code></pre></td>
<td class="lntd">
<pre tabindex="0" class="chroma"><code class="language-cpp" data-lang="cpp"><span class="line"><span class="cl"><span class="kt">void</span> <span class="nf">solve</span><span class="p">()</span> <span class="p">{</span>
</span></span><span class="line"><span class="cl">  <span class="n">ll</span> <span class="n">n</span><span class="p">;</span>
</span></span><span class="line"><span class="cl">  <span class="n">cin</span> <span class="o">&gt;&gt;</span> <span class="n">n</span><span class="p">;</span>
</span></span><span class="line"><span class="cl">  <span class="k">for</span> <span class="p">(</span><span class="n">ll</span> <span class="n">i</span> <span class="o">=</span> <span class="mi">1</span><span class="p">;</span> <span class="n">i</span> <span class="o">&lt;=</span> <span class="n">n</span><span class="p">;</span> <span class="n">i</span><span class="o">++</span><span class="p">)</span> <span class="p">{</span>
</span></span><span class="line"><span class="cl">    <span class="n">cin</span> <span class="o">&gt;&gt;</span> <span class="n">a</span><span class="p">[</span><span class="n">i</span><span class="p">];</span>
</span></span><span class="line"><span class="cl">  <span class="p">}</span>
</span></span><span class="line"><span class="cl">  <span class="n">sort</span><span class="p">(</span><span class="n">a</span> <span class="o">+</span> <span class="mi">1</span><span class="p">,</span> <span class="n">a</span> <span class="o">+</span> <span class="mi">1</span> <span class="o">+</span> <span class="n">n</span><span class="p">);</span>
</span></span><span class="line"><span class="cl">  <span class="k">if</span> <span class="p">(</span><span class="n">a</span><span class="p">[</span><span class="mi">1</span><span class="p">]</span> <span class="o">==</span> <span class="mi">1</span><span class="p">)</span> <span class="p">{</span>
</span></span><span class="line"><span class="cl">    <span class="n">cout</span> <span class="o">&lt;&lt;</span> <span class="s">&#34;-1</span><span class="se">\n</span><span class="s">&#34;</span><span class="p">;</span>
</span></span><span class="line"><span class="cl">  <span class="p">}</span> <span class="k">else</span> <span class="p">{</span>
</span></span><span class="line"><span class="cl">    <span class="n">cout</span> <span class="o">&lt;&lt;</span> <span class="s">&#34;100000007</span><span class="se">\n</span><span class="s">&#34;</span><span class="p">;</span>
</span></span><span class="line"><span class="cl">  <span class="p">}</span>
</span></span><span class="line"><span class="cl"><span class="p">}</span>
</span></span></code></pre></td></tr></table>
</div>
</div><h2 id="b-一气贯通之刃" class="headerLink">
    <a href="#b-%e4%b8%80%e6%b0%94%e8%b4%af%e9%80%9a%e4%b9%8b%e5%88%83" class="header-mark"></a>B 一气贯通之刃</h2><h3 id="题意-1" class="headerLink">
    <a href="#%e9%a2%98%e6%84%8f-1" class="header-mark"></a>题意</h3><p>给一棵树，寻找一条简单路径，使之遍历树上所有的顶点，输出起点和终点。如果没有这样的解则输出$-1$。</p>]]></description></item><item><title>Codeforces Round 990 (Div. 2)</title><link>http://dodolalorc.cn/posts/cfround990div2/</link><pubDate>Thu, 05 Dec 2024 19:27:40 +0800</pubDate><author><name>DODOLA</name></author><guid>http://dodolalorc.cn/posts/cfround990div2/</guid><description><![CDATA[<div class="featured-image">
                <img src="https://img.dodolalorc.cn/i/2024/12/10/67580e40e3ea7.png" referrerpolicy="no-referrer">
            </div><h2 id="a-alyona-and-a-square-jigsaw-puzzle" class="headerLink">
    <a href="#a-alyona-and-a-square-jigsaw-puzzle" class="header-mark"></a>A. Alyona and a Square Jigsaw Puzzle</h2><h3 id="题意" class="headerLink">
    <a href="#%e9%a2%98%e6%84%8f" class="header-mark"></a>题意</h3><p><code>Alyona</code>按照顺时针围绕第一个拼图放置拼图，<code>Alyona</code>每天会按顺序放置一定数量的拼图，如果一天结束时拼图的组装部分没有任何已开始但未完成的层，<code>Alyona</code>会感到开心。给出每天放置拼图的数量，询问<code>Alyona</code>感到快乐的天数。</p>
<h4 id="数据范围" class="headerLink">
    <a href="#%e6%95%b0%e6%8d%ae%e8%8c%83%e5%9b%b4" class="header-mark"></a>数据范围</h4><ul>
<li>$1\leq t\leq 500$</li>
<li>$1\leq n\leq 100$</li>
<li>$1\leq a_i\leq 100,a_1=1$</li>
</ul>
<h3 id="思路" class="headerLink">
    <a href="#%e6%80%9d%e8%b7%af" class="header-mark"></a>思路</h3><p>检查每天完成添加拼图时的总拼图数是否恰好是一个奇数的平方数，若是则该天会感到快乐。</p>
<h3 id="代码" class="headerLink">
    <a href="#%e4%bb%a3%e7%a0%81" class="header-mark"></a>代码</h3><div class="highlight"><div class="chroma">
<table class="lntable"><tr><td class="lntd">
<pre tabindex="0" class="chroma"><code><span class="lnt"> 1
</span><span class="lnt"> 2
</span><span class="lnt"> 3
</span><span class="lnt"> 4
</span><span class="lnt"> 5
</span><span class="lnt"> 6
</span><span class="lnt"> 7
</span><span class="lnt"> 8
</span><span class="lnt"> 9
</span><span class="lnt">10
</span><span class="lnt">11
</span><span class="lnt">12
</span><span class="lnt">13
</span></code></pre></td>
<td class="lntd">
<pre tabindex="0" class="chroma"><code class="language-cpp" data-lang="cpp"><span class="line"><span class="cl"><span class="kt">void</span> <span class="nf">solve</span><span class="p">()</span> <span class="p">{</span>
</span></span><span class="line"><span class="cl">  <span class="n">cin</span> <span class="o">&gt;&gt;</span> <span class="n">n</span><span class="p">;</span>
</span></span><span class="line"><span class="cl">  <span class="n">ll</span> <span class="n">tot</span> <span class="o">=</span> <span class="mi">0</span><span class="p">,</span> <span class="n">ans</span> <span class="o">=</span> <span class="mi">0</span><span class="p">;</span>
</span></span><span class="line"><span class="cl">  <span class="k">for</span> <span class="p">(</span><span class="n">ll</span> <span class="n">i</span> <span class="o">=</span> <span class="mi">1</span><span class="p">;</span> <span class="n">i</span> <span class="o">&lt;=</span> <span class="n">n</span><span class="p">;</span> <span class="n">i</span><span class="o">++</span><span class="p">)</span> <span class="p">{</span>
</span></span><span class="line"><span class="cl">    <span class="n">cin</span> <span class="o">&gt;&gt;</span> <span class="n">a</span><span class="p">[</span><span class="n">i</span><span class="p">];</span>
</span></span><span class="line"><span class="cl">    <span class="n">tot</span> <span class="o">+=</span> <span class="n">a</span><span class="p">[</span><span class="n">i</span><span class="p">];</span>
</span></span><span class="line"><span class="cl">    <span class="n">ld</span> <span class="n">t</span> <span class="o">=</span> <span class="n">sqrtl</span><span class="p">(</span><span class="n">tot</span><span class="p">);</span>
</span></span><span class="line"><span class="cl">    <span class="k">if</span> <span class="p">((</span><span class="n">ll</span><span class="p">)</span><span class="n">t</span> <span class="o">&amp;</span> <span class="mi">1</span> <span class="o">&amp;&amp;</span> <span class="n">t</span> <span class="o">==</span> <span class="p">(</span><span class="n">ll</span><span class="p">)</span><span class="n">t</span><span class="p">)</span> <span class="p">{</span>
</span></span><span class="line"><span class="cl">      <span class="n">ans</span><span class="o">++</span><span class="p">;</span>
</span></span><span class="line"><span class="cl">    <span class="p">}</span>
</span></span><span class="line"><span class="cl">  <span class="p">}</span>
</span></span><span class="line"><span class="cl">  <span class="n">cout</span> <span class="o">&lt;&lt;</span> <span class="n">ans</span> <span class="o">&lt;&lt;</span> <span class="sc">&#39;\n&#39;</span><span class="p">;</span>
</span></span><span class="line"><span class="cl"><span class="p">}</span>
</span></span></code></pre></td></tr></table>
</div>
</div><h2 id="b-replace-character" class="headerLink">
    <a href="#b-replace-character" class="header-mark"></a>B. Replace Character</h2><h3 id="题意-1" class="headerLink">
    <a href="#%e9%a2%98%e6%84%8f-1" class="header-mark"></a>题意</h3><p>在一个长度为$n$的字符串中，执行<strong>一次</strong>这样的操作：</p>
<ul>
<li>选择两个索引$i,j(1\leq i,j\leq n)$，可以选择$i = j$。</li>
<li>进行赋值$s_i:=s_j$。</li>
</ul>
<p>要求输出在进行该操作之后，字典序最小的那个字符串。</p>]]></description></item></channel></rss>